# Website
# Brand (logo, one sentance elevator pitch)
# offers (consultations, installations, products)
# monetization (sell products, sell software, sell service, installer commision, client subscription (support/repair/replacments))
# Client login
## Customer system backup/restore center. Delete for GDPR.
## Customer email (NB)/chat/support option
## Review area
## Request callout/repair/replacement/training/automation additions
## Product/installation breakdown
## Tips/tricks/usage guide on your personalized setup
## Community chat around your house and system with other people
## Delete account for GDPR.
## Indefinite token on home system to access cloud portal
## User management
## Interactive game to teach you about your automation and integration on what is possible
## Share company newsletters, experiments, upgrades, etc. (notifications)
## Share/invite a friend
## Internationalization
## Search other installations/comments/questions/etc

# VOICE, CAMERA, UI

# https://lightwaverf.com/blogs/ideas-and-inspiration

# Make sure the kids are safe at night
# One switch to rule them all
# Schedule electric heating
# Turn on lights when you open doors
# Reduce heatloss from windows
# Room by room heating
# Wire-free switching
# Family safety
# Automatically open and close curtains or blinds
# Save energy by locking Lightwave connect series dimmers
# Save energy the smart way
# Assisted living
# Remotely manage my holiday home
# Schedule appliances
# Get the garden ready for summer
# Wake me up gently
# Keep it simple
# From dusk till dawn
# Simulate occupancy
# Manage kids screen time!
# Create a scene!

# https://smartn.co.uk/smart-homes/#1500413636040-b12c915e-2074

# https://github.com/blaineventurine/home-automation-docker/blob/master/hass-config/automations.yaml
- alias: Set theme at startup
  trigger:
    platform: homeassistant
    event: start
  action:
    service: frontend.set_theme
    data:
      name: Dark - Green

- alias: Turn on front lights at sundown
  trigger:
    platform: sun
    event: sunset
    offset: "-00:30:00"
  action:
    - service: light.turn_on
      data:
        entity_id: 
          - light.couch_light
          - light.porch_light
    # - service: switch.turn_on
    #   data:
    #     entity_id: switch.diningroomlamp

- alias: Turn off porch light at sunrise
  trigger:
    platform: sun
    event: sunrise
    offset: 00:20:00
  action:
  - service: light.turn_off
    data:
      entity_id: light.porch_light

- alias: Turn off living room couch light at 1 am
  trigger:
    platform: time
    at: "01:00:00"
  action:
  - service: light.turn_off
    data:
      entity_id:
        - light.couch_light

- alias: Roomba bin full
  trigger:
    platform: template
    value_template: "{%if is_state_attr('vacuum.roomba', 'bin_full', true) %}true{%endif%}"
  action:
  - service: notify.mobile_app_blaines_phone
    data:
      message: 'Roomba bin is full, please empty it'

- alias: Roomba is stuck
  trigger:
    platform: template
    value_template: "{%if is_state_attr('vacuum.roomba', 'status', 'Stuck') %}true{%endif%}"
  action:
  - service: notify.mobile_app_blaines_phone
    data:
      message: 'Roomba got stuck'

- alias: Start Roomba while we are away
  trigger:
     platform: state
     entity_id: group.all_people
     from: 'home'
     to: 'not_home'
     for:
      hours: 1
  condition:
    condition: and
    conditions:      
     - condition: time  
       after: '10:00:00'
       before: '18:00:00'     
     - condition: template
       value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.start_roomba_while_we_are_away.attributes.last_triggered) | int > 86400 }}'
  action:
    - service: vacuum.turn_on
      data:
       entity_id: vacuum.roomba
    - service: notify.mobile_app_blaines_phone
      data:
        message: 'Roomba started'

- alias: Turn heat down when away
  trigger:
    platform: state
    entity_id: group.all_people
    from: 'home'
    to: 'not_home'
    for:
      minutes: 30
  condition:     
      - condition: numeric_state
        entity_id: sensor.dark_sky_temperature
        below: 45
  action:
    - service: climate.turn_on
      entity_id: climate.dining_room_nest
    - service: climate.set_temperature
      data:
        entity_id: climate.dining_room_nest
        temperature: 55
        operation_mode: Heat

- alias: Turn off office lights if no motion detected
  trigger:
    platform: state
    entity_id: group.office_motion_sensors
    to: 'off'
    for:
      minutes: 10
  action:
    service: switch.turn_off
    data:
      entity_id:
        - switch.office_lights

- alias: Turn on office lights if I'm at my desk
  trigger:
    platform: state
    entity_id: binary_sensor.desk_motion_sensor
    to: 'on'
  action:
    service: switch.turn_on
    data:
      entity_id:
        - switch.office_lights

- alias: Turn on humidifier if humidity below 55%
  trigger:
    platform: state
    entity_id: sensor.pi_one_humidity
  action:
    service_template: >-
      {% set humidity = states('sensor.pi_one_humidity') | float %}
      {% if humidity > 70 %}
        switch.turn_off
      {% elif humidity < 55 %}
        switch.turn_on
      {% endif %}
    entity_id: switch.humidifier

- alias: Toggle lights by voice
  trigger:
    - event_data: {}
      event_type: rhasspy_ChangeLightState
      platform: event
  condition: []
  action:
    - alias: ''
      data_template:
        light_name: "group.{{ trigger.event.data.light_name }}"
        light_state: "{{ trigger.event.data.light_state }}"
      service: script.rhasspy_light_state   

- alias: Say the time
  trigger:
    platform: event
    event_type: rhasspy_GetTime
  action:
    service: rest_command.marytts
    data_template:
      message: "It is {{ now().strftime('%I') | int }} {{ now().strftime('%M %p') }}."

- alias: Say the temperature
  trigger:
    platform: event
    event_type: rhasspy_GetTemperature
  action:
    service: rest_command.marytts
    data_template:
      message: "It is {{ states('sensor.dark_sky_temperature') }} degrees."

- alias: Start the Roomba
  trigger:
    platform: event
    event_type: rhasspy_StartRoomba
  action:
    - service: vacuum.turn_on
      data:
       entity_id: vacuum.roomba


# - alias: Say the forecast
#   trigger:
#     platform: event
#     event_type: rhasspy_GetForecast
#   action:
#     service: rest_command.marytts
#     data_template:
#       message: "It's currently {{states ('sensor.dark_sky_summary.state') }} and {{states.sensor.dark_sky_temperature.state|round}} degrees."
#       {% if is_state("sensor.allergy_season", "True")  %}
#       "The pollen level for today is {{states.sensor.pollen_level.state}} or {{states.sensor.pollen_index.state}} percent."
#       {% endif %}
#       {% if is_state("sensor.flu_season", "True") %}
#       "The flu risk for today is {{states.sensor.cold_flu_risk.state}} or {{states.sensor.cold_flu_percentage.state}} percent."
#       {% endif %}
#       "Today you can expect {{states.sensor.dark_sky_hourly_summary.state}} with a high of {{states.sensor.dark_sky_daily_high_temperature.state|round|int}} and a low of {{states.sensor.dark_sky_daily_low_temperature.state|round|int}}."
#       {% if states (weather.dark_sky.wind_speed') |int > 10 %}
#       "Be advised it is windy outside."
#       {% endif %}
  
# - alias: Turn on Amazon Prime Video/Netflix/Hulu











#################################################################################################################################################################################











# https://github.com/CiquattroFPV/Homeassistant-Example-Config/blob/master/automations.yaml
####################################################
#                                                  #
#             Let's Encrypt Renewal                #
#                                                  #
####################################################
- id: letsencrypt-renewal
  alias: "Let's Encrypt Renewal"
  initial_state: 'on'
  trigger:
  - platform: time
    at: '00:00:00'
  action:
  - service: hassio.addon_restart
    data:
      addon: core_letsencrypt
  - service: notify.hassnico_bot
    data_template:
      message: >
        "Let's Encrypt CA was Renewed"

####################################################
#                                                  #
#                   Greetings                      #
#                                                  #
####################################################

#- id: People-gretting
  #alias: 'People Greeting'
  #initial_state: 'on'
  #trigger:
    #- platform: state
      #entity_id:
        #- device_tracker.nico_nico
        #- device_tracker.mamma_mamma
        #- device_tracker.iphone
      #from: 'not_home'
      #to: 'home'
      #for:
        #minutes: 10
  #action:
    #- service: notify.alexa_media
      #data:
        #entity_id: media_player.nicolos_bose_home_speaker_500
        #data_template:
          #data:
            #type: tts
        #message: >
          #{% set person = trigger.entity_id.split('.')[1]|replace('_', ' ')%}
          #{%- macro greeting_sentence(person) -%}
          #{{ [
          #"Ben Tornato a casa " ~ person,
          #"Chi è tornato a casa? "  ~ person +" è tornata a casa!",
          #"Attenzione: " ~ person + " è a casa.",
          #"Ben tornato a casa " ~ person + ".  Ci sei mancato molto.. forse.",
          #"Ora la nostra casa è al completo, Riposati e rilassati.. Bentornato!" ~ person,
          #"La vita è come una canzone, sei tornato a casa tua. Benvenuto a casa " ~ person,
          #"Ehilà " ~ person + " bentornato!",
          #person ~ "! Sei a casa!"
          #] | random }}
          #{%- endmacro -%}
          #"{{greeting_sentence(person)}}"

- alias: Coffe Greetings - Notification
  initial_state: 'on'
  trigger:
    platform: template
    value_template: "{{ state_attr('sensor.shelly_shplg_s_04169c_consumption', 'consumption')| int > 1000 }}"    
    for:
      #hours: 1
      #minutes: 10
      seconds: 6
  action:
    - service: notify.hassnico_bot
      data:
        message: "Qualcuno sta facendo il Caffè"
    - service: media_player.volume_set
      data:
        entity_id: media_player.nicolo_s_bose_home_speaker_500
        volume_level: 0.3
    - delay: 00:00:20
    - service: notify.alexa_media
      data:
        target: 
          - media_player.nicolo_s_bose_home_speaker_500
        data:
          type: tts
        message: >
         {{ [
         "Spero che il Caffè sia buono",
         "Spero che il Caffè sia di tuo gradimento",
         "Nespresso o Borbone, questo è il problema!",
         "Oh che bello caffè",
         "Ci vuole proprio una bella pausa caffè",         
         "Divino caffè il cui gusto rimane tutto il giorno in bocca",
         "Non esiste buongiorno che non porti con sé il profumo dell’espresso.",
         "Non c’è niente di meglio di una tazza di caffè per stimolare il cervello.",
         "All you need is Coffee.",
         "Il caffè è il balsamo del cuore e dello spirito.",
         "Tutti devono credere in qualcosa. Io credo che mi farò un altro caffè",
         "Un giorno insegnerò alla tazzina di caffè come venire a letto da sola.",
         "Non c’è niente di più dolce di una tazza di caffè amaro.",
         ] | random }}


### Nico is Driving ###
- alias: Nico is Driving - Notification
  initial_state: 'on'
  trigger:
    platform: template
    value_template: "{{ state_attr('device_tracker.nico_nico', 'velocity')| int >= 50 }}"
    for:
      #hours: 1
      #minutes: 10
      seconds: 20
  action:
    - service: notify.hassnico_bot
      data:
        message: "Nico is Driving"
    - service: script.alexatraffic2




####################################################
#                                                  #
#                   Lights                         #
#                                                  #
####################################################

####################################################
#               Lights Self Shutdown               #
####################################################

- id: light-self-shutdown
  alias: Lights Self Shutdown
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - switch.shelly_shsw_25_687269_1  # notte
        - switch.shelly_shsw_25_687269_2  # notte
      to: 'on'
      for: '00:30:00'
    - platform: state
      entity_id:
        - switch.shelly_shsw_25_e5e601_1    # bagno
        - switch.shelly_shsw_25_e5e601_2    # bagno
      to: 'on'
      for: '01:15:00'
    - platform: state
      entity_id:
        - switch.shelly_shsw_25_686d62_1    # cucina
        - switch.shelly_shsw_25_686d62_2    # cucina
        - switch.shelly_shsw_25_68796e_1   # salone
        - switch.shelly_shsw_25_68796e_2   # slaone
      to: 'on'
      for: '02:00:00'
  action:
    - service: switch.turn_off
      data_template:
        entity_id: " {{ trigger.entity_id }} "
    - service: notify.hassnico_bot
      data_template:
        message: >
          "{{ trigger.to_state.attributes.friendly_name }} just changed from {{ trigger.to_state.state }}
          to {{ trigger.from_state.state }}. Self Shutdown!"
    - service: media_player.volume_set
      data:
        entity_id: media_player.nicolo_s_bose_home_speaker_500
        volume_level: 0.3
    #- delay: 00:00:20
    - service: notify.alexa_media
      data:
        target: 
          - media_player.nicolo_s_bose_home_speaker_500
        data:
          type: tts
        message: >
         {{ [
         "La Luce si è spenta automaticamente",
         "Risparmio Energetico Attivato da Home Assistant, la luce si è spenta",
         "La luce si è spenta piccole bibbi",
         "La luce si è spenta",
         "E luce non fù"
         ] | random }}




####################################################
#            Lights Midnight Shutdown              #
####################################################
- id: light-midnight-shutdown
  alias: 'Turn off Light at Midnight'
  initial_state: 'on'
  trigger:
    platform: time
    at: '23:59:00'
  action:
   service: homeassistant.turn_off
   entity_id: group.lights

####################################################
#            Lights Turn On Nico                   #
####################################################

- id: light-on-room-nico
  alias: 'Turn on Light - WeekDays - Morning - Nicos Room '
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: device_tracker.nicogalaxys8
    to: 'home'
  condition:
    condition: time
    after: '07:00:00'
    before: '10:00:00'
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
   service: homeassistant.turn_on
   entity_id: light.room_nico_rgb

####################################################
#              Lights ON Sunset                    #
####################################################
- id: light-on-sunset
  alias: 'Light on Sunset'  
  initial_state: 'on'
  trigger:
    platform: sun
    event: sunset
    offset: "+00:15:00"
  condition:
    condition: state
    entity_id: group.family
    state: home
  action:
   - service: homeassistant.turn_on
     entity_id: group.living
   - service: notify.hassnico_bot
     data:
       message: "Sunset - Lights ON at {{ states('sensor.date_time') }}"
   - service: media_player.volume_set
     data:
       entity_id: media_player.nicolo_s_bose_home_speaker_500
       volume_level: 0.3
   - delay: 00:00:02
   - service: notify.alexa_media
     data:
       target: 
         - media_player.nicolo_s_bose_home_speaker_500
       data:
         type: tts
       message: >
        {{ [
        "Le luci sono state accese al tramonto",
        "Casa era poco illuminata ed ho pensato di accendere le luci",
        "Le luci sono state accese perchè era poco illuminato",
        ] | random }}
####################################################
#                                                  #
#                   Notify                         #
#                                                  #
####################################################
####################################################
#                  Update Notify                   #
####################################################

- id: notify-update
  alias: Update Available Notifications
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.updater
      from: 'off'
      to: 'on'
  action:
    service: notify.hassnico_bot
    data:
      message: "Home Assistant {{ state_attr('binary_sensor.updater', 'newest_version') }} is available."

####################################################
#                  Bad Logins                      #
####################################################

- id: bad-logins
  alias: Login Failure
  initial_state: 'on'
  hide_entity: True
  trigger:
    platform: template
    value_template: "{{ states('persistent_notification.httplogin') != 'authentication' }}"
  action:
   service: notify.hassnico_bot
   data:
     message: 'Bad Login.. There was a Hack attempt! Go Check the GUI for details.'

####################################################
#                  Today's Chef                    #
####################################################
- id: notify-today-chef
  alias: Who Cook
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.who_cooks
  action:
    - service: notify.hassnico_bot
      data_template:
        message: >
           "Today Cook {{ trigger.to_state.state }}"

####################################################
#                  Battery                         #
#                Notifications                     #
####################################################

####################################################
#                  Nico Battery                    #
####################################################

# - id: notify-nico-battery-low
#   alias: Nico Battery Low - Notification
#   initial_state: 'on'
#   trigger:
#      platform: time_pattern    
#      # You can also match on interval. This will match every 45 minutes
#      #minutes: '/45'
#      seconds: 10

#   condition:
#      condition: or
#      conditions:
#       - condition: template
#         value_template: "{{ (state_attr('device_tracker.nico_nico', 'battery')|int) < 35 }}"
#   action:
#     - service: notify.hassnico_bot
#       data:
#         message: "Nico's Telephone is on low Battery at {{ states('sensor.date_time') }}"
#     - service: notify.hassnico_bot
#       data:
#         message: "Nico's Telephone Battery Level is {{ states('sensor.batteria_telefono_nico') }}%"


- id: notify-nico-battery-low
  alias: Nico Battery Low - Notification
  initial_state: 'on'
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.batteria_telefono_nico
    above: 0
    below: 36
  action:
    - service: notify.hassnico_bot
      data:
        message: "Nico's Telephone is on low Battery at {{ states('sensor.date_time') }}"
    - service: notify.hassnico_bot
      data:
        message: "Nico's Telephone Battery Level is {{ states('sensor.batteria_telefono_nico') }}%"


####################################################
#                  Mom Battery                     #
####################################################

- id: notify-mamma-battery-low
  alias: Mamma Battery Low - Notification
  initial_state: 'on'
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.batteria_telefono_mamma
    above: 0
    below: 36
  action:
    - service: notify.hassnico_bot
      data:
        message: "Mom's Telephone is on low Battery at {{ states('sensor.date_time') }}"
    - service: notify.hassnico_bot
      data:
        message: "Mom's Telephone Battery Level is {{ states('sensor.batteria_telefono_mamma') }}%"

####################################################
#                  Hass Start                      #
####################################################

- id: notify-hass-start
  alias: Home Assistant Start - Notify
  initial_state: 'on'
  trigger:
    platform: homeassistant
    event: start
  action:
  - service: notify.hassnico_bot
    data:
      message: "Home Assistant Start at {{ states('sensor.date_time') }}"
  - service: media_player.volume_set
    data:
      entity_id: media_player.nicolo_s_bose_home_speaker_500
      volume_level: 0.3
  - delay: 00:00:02
  - service: notify.alexa_media
    data:
      target: 
        - media_player.nicolo_s_bose_home_speaker_500
      data:
        type: tts
      message: >
       {{ [
       "Home Assistant è nuovamente disponibile",
       "Home Assistant è operativo",
       "Home assistant is back piccole bibbi",
       "Sono nuovamente operativa",
       "Signori e Signore Ladies and Gentlement Home assistant è nuovamente operativo",
       "Home assistant è avviato",
       ] | random }}

####################################################
#                  Hass Stop                       #
####################################################

- id: notify-hass-stop
  alias: Home Assistant Stop - Notify
  initial_state: 'on'
  trigger:
    platform: event
    event_type: homeassistant_stop
  action:
    service: notify.hassnico_bot
    data:
      message: "Home Assistant Stop at {{ states('sensor.date_time') }}"

####################################################
#                   Zone                           #
#                Notifications                     #
####################################################

####################################################
#                   Mom  Home                      #
####################################################

- id: zone-mamma-home
  alias: Mamma at Home - Notification
  initial_state: 'on'
  trigger:
     platform: zone
     event: enter
     zone: zone.home
     entity_id: device_tracker.mamma_mamma
  action:
   service: notify.hassnico_bot
   data:
     message: "Mamma is at Home at {{ states('sensor.date_time') }}"

####################################################
#                   Mom Out Home                   #
####################################################

- id: zone-mamma-out-home
  alias: Mamma Outside Home - Notification
  initial_state: 'on'
  trigger:
     platform: zone
     event: leave
     zone: zone.home
     entity_id: device_tracker.mamma_mamma
  action:
   service: notify.hassnico_bot
   data:
     message: "Mamma is going out at {{ states('sensor.date_time') }}"

####################################################
#                   Maria  Home                    #
####################################################

- id: zone-maria-home
  alias: Maria at Home - Notification
  initial_state: 'on'
  trigger:
     platform: state
     entity_id: device_tracker.iphone
     from: 'not_home'
     to: 'home'
  action:
  - service: notify.hassnico_bot
    data:
      message: "Maria is at Home {{ states('sensor.date_time') }}"
  - delay: 
       seconds: 30
  - service: media_player.volume_set
    data:
      entity_id: media_player.nicolo_s_bose_home_speaker_500
      volume_level: 0.35
  - delay: 00:00:02
  - service: notify.alexa_media
    data:
      target: 
        - media_player.nicolo_s_bose_home_speaker_500
      data:
        type: tts
      message: >
       {{ [
       "Bentornata a casa Maria",
       "Mascia finalmente sei a casa",
       "Ci sei mancata Mascia, spero che la giornata sia andata bene",
       "Sono felicissima di vederti Mascia, come stai?",
       "La regina Mascia è a casa",
       "Sua Maestà sono felicissima di rivederla",
       "Mascia, stare qui non aveva senso senza di te. Ben Tornata!",
       "Se gli abbracci fossero acqua, ti darei il mare… Se le coccole fossero foglie, ti darei la foresta… E se l’amicizia fosse la vita ti darei la mia… Bentornata!",
       ] | random }}
  - service: rest_command.ss_home_on
  - service: rest_command.ss_preset_home
  - delay: 
      seconds: 10
  - service: rest_command.ss_preset_living
  - delay: 
      seconds: 10
  - service: rest_command.ss_preset_bedroom
  - delay: 
      seconds: 10
  - service: rest_command.ss_preset_home

####################################################
#               Maria out Home                     #
####################################################

- id: zone-maria-out-home
  alias: Maria Outside Home - Notification
  initial_state: 'on'
  trigger:
     platform: state
     entity_id: device_tracker.iphone  #device_tracker.iphonemarie_2
     #from: 'home'
     to: 'not_home'
     for: '00:05:00'
  action:
   - service: notify.hassnico_bot
     data:
       message: "Maria is going out at {{ states('sensor.date_time') }}"
   - service: rest_command.ss_home_off

####################################################
#                  Nico Mom Home                   #
####################################################

- id: zone-nico-home
  alias: Nico at Home - Notification
  initial_state: 'on'
  trigger:
     platform: zone
     entity_id: device_tracker.nico_nico
     zone: zone.home
     event: enter
  condition:
     condition: time
     after: '07:00:00'
     before: '23:59:00'
  action:
  - service: notify.hassnico_bot
    data:
      message: "Nico is at Home at {{ states('sensor.date_time') }}"
  - service: media_player.volume_set
    data:
      entity_id: media_player.echo_dot_di_nicolo
      volume_level: 0.35
  - delay: 00:00:03
  - service: notify.alexa_media
    data:
      target: 
        - media_player.echo_dot_di_nicolo
      data:
        type: tts
      message: >
       {{ [
       "Nico è a casa di Mamma",       
       "Nico è arrivato da Mamma",
       "Nico è andato a trovare la Mamma",
       "Wooow, Rossella è felicissima di vedere Nico",
       "Il boss è dalla mamma",
       ] | random }}

####################################################
#               Nico Out Mom Home                  #
####################################################

- id: zone-nico-out-home
  alias: Nico is going out - Notificationù
  initial_state: 'on'
  trigger:
     platform: zone
     entity_id: device_tracker.nico_nico     
     zone: zone.home
     event: leave
  condition:
     condition: time
     after: '07:00:00'
     before: '23:59:00'         
  action:
  - service: notify.hassnico_bot
    data:
      message: "Nico is going out from Home at {{ states('sensor.date_time') }}"

####################################################
#                  Nico Casetta GPS                #
####################################################

- id: zone-nico-casetta
  alias: Nico at Home - Notification
  initial_state: 'on'
  trigger:
     platform: zone
     entity_id: device_tracker.nico_nico
     zone: zone.casetta
     event: enter
  condition:
     condition: time
     after: '07:00:00'
     before: '23:59:00'
  action:
  - service: notify.hassnico_bot
    data:
      message: "Nico is at Casetta at {{ states('sensor.date_time') }}" 
#   - delay: 
#       minutes: 10
#   - service: media_player.volume_set
#     data:
#       entity_id: media_player.nicolo_s_bose_home_speaker_500
#       volume_level: 0.3
#   - delay: 00:00:02
#   - service: notify.alexa_media
#     data:
#       target: 
#         - media_player.nicolo_s_bose_home_speaker_500
#       data:
#         type: tts
#       message: >
#        {{ [
#        "Bentornato a casa Nico",
#        "Bella zii, come te butta oggi?",
#        "Nico sei finalmente a casa",
#        "Ci sei mancato tantissimo Nico, sopratutto a Mascia",
#        "Quant'è bello tornare da lavoro e trovare Mascia a casa?",
#        "Wooow, Mascia è felicissima di vederti",
#        "Ladies and Gentlement, Signori e Signore, Il boss è a casa",
#        ] | random }}

####################################################
#                  Nico Casetta 2                  #
####################################################
- id: zone-nico-casetta
  alias: Nico at Home 2 - Notification
  initial_state: 'on'
  trigger:
     platform: state
     entity_id: device_tracker.nicogalaxys8
     from: 'not_home'
     to: 'home'
  #condition:
     #condition: time
     #after: '07:00:00'
     #before: '23:59:00'
  action:
  #- service: notify.hassnico_bot
    #data:
      #message: "Nico is at Casetta at {{ states('sensor.date_time') }}" 
  #- delay: 
      #minutes: 10
  - service: media_player.volume_set
    data:
      entity_id: media_player.nicolo_s_bose_home_speaker_500
      volume_level: 0.3
  - delay: 00:00:02
  - service: notify.alexa_media
    data:
      target: 
        - media_player.nicolo_s_bose_home_speaker_500
      data:
        type: tts
      message: >
       {{ [
       "Bentornato a casa Nico",       
       "Nico sei finalmente a casa",
       "Si sente la differenza senza di te. Mi sei mancato",
       "Ci sei mancato",
       "Che gioia riaverti tra noi e vederti sorridere in giro per casa. Bentornato",
       "Ci sei mancato tantissimo Nico, sopratutto a Mascia",
       "Quant'è bello tornare da lavoro e trovare Mascia a casa?",
       "Wooow, Mascia è felicissima di vederti",
       "Ladies and Gentlement, Signori e Signore, Il boss è a casa",
       "Se gli abbracci fossero acqua, ti darei il mare… Se le coccole fossero foglie, ti darei la foresta… E se l’amicizia fosse la vita ti darei la mia… Bentornato!",
       ] | random }}
  - service: rest_command.ss_home_on
  - service: rest_command.ss_preset_home
  - delay: 
      seconds: 10
  - service: rest_command.ss_preset_living
  - delay: 
      seconds: 10
  - service: rest_command.ss_preset_bedroom
  - delay: 
      seconds: 10
  - service: rest_command.ss_preset_home




# - id: nico-casetta
#   alias: Nico Device at Casetta - Notification
#   initial_state: 'on'
#   trigger:
#      platform: state
#      entity_id: device_tracker.nicogalaxys8
#      from: 'not_home'
#      to: 'home'
#   action:
#   - service: notify.alexa_media
#     data:
#       target: 
#         - media_player.nicolo_s_bose_home_speaker_500
#       data:
#         type: tts
#       message: >
#        {{ [
#        "Bentornato a casa Nico",
#        "Bellaaaa ziiiiiii, come te butta oggi?",
#        "Nico sei finalmente a casa",
#        "Ci sei mancato tantissimo Nico, sopratutto a Mascia",
#        "Quant'è bello tornare da lavoro e trovare Mascia a casa?",
#        "Wooow, Mascia è felicissima di vederti",
#        "Ladies and Gentlement, Signori e Signore, Il boss è a casa",
#        ] | random }}
####################################################
#               Nico Out Casetta                   #
####################################################

- id: zone-nico-out-casetta
  alias: Nico is going out - Notification
  initial_state: 'on'
  trigger:
     platform: zone
     entity_id: device_tracker.nico_nico
     zone: zone.casetta
     event: leave
  condition:
     condition: time
     after: '07:00:00'
     before: '23:59:00'         
  action:
   - service: notify.hassnico_bot
     data:
       message: "Nico is going out from Casetta at {{ states('sensor.date_time') }}"
   - service: script.alexatraffic2
   - service: rest_command.ss_home_off
   - service: rest_command.ss_preset_home
   - delay: 
       seconds: 10
   - service: rest_command.ss_preset_living
   - delay: 
       seconds: 10
   - service: rest_command.ss_preset_bedroom
   - delay: 
       seconds: 10
   - service: rest_command.ss_preset_home
####################################################
#                  Nico Dad                        #
####################################################

- id: zone-nico-dad-home
  alias: Nico at Papa's Home - Notification
  initial_state: 'on'
  trigger:
     platform: zone
     event: enter
     zone: zone.papa
     entity_id: device_tracker.nico_nico
  action:
   service: notify.hassnico_bot
   data:
     message: "Nico is at Papa's Home at {{ states('sensor.date_time') }}"

####################################################
#                  Nico Out Dad                    #
####################################################

- id: zone-nico-out-dad-home
  alias: Nico leaving Papa's Home - Notification
  initial_state: 'on'
  trigger:
      platform: zone
      event: leave
      zone: zone.papa
      entity_id: device_tracker.nico_nico
  action:
    service: notify.hassnico_bot
    data:
      message: "Nico is going out from Papa's Home {{ states('sensor.date_time') }}"

####################################################
#                  Nico Work                       #
####################################################

- id: zone-nico-work
  alias: Nico at Work - Notification
  initial_state: 'on'
  trigger:
    platform: zone
    event: enter
    zone: zone.work
    entity_id: device_tracker.nico_nico
  condition:
    condition: time
    after: '07:00:00'
    before: '20:00:00'
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
  -  service: notify.hassnico_bot
     data:
       message: "Nico at Work at {{ states('sensor.date_time') }}"
       
####################################################
#                Nico Work tigre                   #
####################################################

- id: zone-nico-work-tigre
  alias: Nico at Work (Tigre) - Notification
  initial_state: 'on'
  trigger:
    platform: zone
    event: enter
    zone: zone.tigre
    entity_id: device_tracker.nico_nico
  condition:
    condition: time
    after: '07:00:00'
    before: '20:00:00'
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
  -  service: notify.hassnico_bot
     data:
       message: "Nico at Work at {{ states('sensor.date_time') }}"
       

####################################################
#                Nico out Work                     #
####################################################

- id: zone-nico-out-work
  alias: Nico out from Work - Notification
  initial_state: 'on'
  trigger:
    platform: zone
    event: leave
    zone: zone.work
    entity_id: device_tracker.nico_nico
  condition:
    condition: time
    after: '07:00:00'
    before: '20:00:00'
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
   - service: notify.hassnico_bot
     data:
       message: "Nico is going out from Work at {{ states('sensor.date_time') }}"

####################################################
#                Nico out Tigre                    #
####################################################

- id: zone-nico-out-tigre
  alias: Nico out from Work (Tigre)) - Notification
  initial_state: 'on'
  trigger:
    platform: zone
    event: leave
    zone: zone.tigre
    entity_id: device_tracker.nico_nico
  condition:
    condition: time
    after: '07:00:00'
    before: '20:00:00'
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
   - service: notify.hassnico_bot
     data:
       message: "Nico is going out from Work at {{ states('sensor.date_time') }}"


####################################################
#                Notify Sunrise                    #
####################################################

- id: notify-sunrise
  alias: Notify on sunrise
  initial_state: 'on'
  trigger:
    platform: sun
    event: sunrise
    offset: '+00:00:00'
  action:
    # Actions are scripts so can also be a list of actions
    - service: notify.hassnico_bot
      data:
        message: "Beautiful sunrise!"
    - service: notify.hassnico_bot
      data:
        message: "The sun is up. Wake Up! {{ states('sensor.date_time') }}"

####################################################
#                Notify Sunset                     #
####################################################

- id: notify-sunset
  alias: Notify on sunset
  initial_state: 'on'
  trigger:
    platform: sun
    event: sunset
    offset: '+00:00:00'
  action:
    # Actions are scripts so can also be a list of actions
    - service: notify.hassnico_bot
      data:
        message: "Beautiful sunset!"
    - service: notify.hassnico_bot
      data:
        message: "Oh wow you really missed something great. {{ states('sensor.date_time') }}"
    - service: media_player.volume_set
      data:
        entity_id: media_player.nicolo_s_bose_home_speaker_500
        volume_level: 0.3
    - service: notify.alexa_media
      data:
        target: 
          - media_player.nicolo_s_bose_home_speaker_500
        data:
          type: tts
        message: >
         {{ [
         "C'è un tramonto meraviglioso oggi, affacciati alla finestra",
         "Che ne pensi del tramonto di oggi? Non è Bellissimo?",
         "Sai… quando si è molto tristi si amano i tramonti.",
         "Tutto è imperfetto, non c’è tramonto così bello da non poterlo essere di più.",
         "Nulla può sostituire la luce del tramonto. La natura è un’orchestra in cui ogni suono è perfettamente bilanciato",
         "Ancor più dell’alba il tramonto del sole ci sorprende e ci stupisce, con i suoi colori, le sue luci e la sua bellezza unica",
         "Non si può che rimanere senza fiato di fronte allo spettacolo naturale offerto da un tramonto, dal Sole che piano piano sparisce all’orizzonte",
         "Tutto è imperfetto, non c’è tramonto così bello da non poterlo essere di più",
         "Non c’è niente di più musicale che un tramonto",
         "Quando un’alba o un tramonto non ci danno più emozioni, significa che l’anima è malata",
         "Che sensibilità il sole: arrossire tutte le sere al momento di tramontare",
         "Sono molto appassionato di tramonti. Vieni, andiamo a guardare un tramonto",
         "Tutti meritiamo un tramonto, una birra ghiacciata e tante risate",
         ] | random }}

####################################################
#                                                  #
#                   Scenes                         #
#                                                  #
####################################################


####################################################
#                Air Conditioner                   #
####################################################
####################################################
#                Notify Sunset                     #
####################################################
- id: scene-ac-mode-off
  alias: AC Mode OFF - Automation
  trigger:
    platform: state
    entity_id: input_select.ac_mode
    to: "Power Off"
  action:
    - service: switch.turn_off
      entity_id: switch.air3
    - service: notify.hassnico_bot
      data_template:
        message: >
           "AC Mode changed to: {{ trigger.to_state.state }}"

- id: scene-ac-mode-hot
  alias: AC Mode - Hot
  trigger:
    platform: state
    entity_id: input_select.ac_mode
    to: "Hot"
  action:
    - service: switch.turn_on
      entity_id: switch.air3
    - service: notify.hassnico_bot
      data_template:
        message: >
           "AC Mode  changed to: {{ trigger.to_state.state }}"

- id: scene-ac-mode-hot-morning
  alias: AC Mode - Hot Morning
  trigger:
    platform: state
    entity_id: input_select.ac_mode
    to: "Hot Morning"
  action:
    - service: notify.hassnico_bot
      data_template:
        message: >
           "AC Mode  changed to: {{ trigger.to_state.state }}"

- id: scene-ac-mode-cold
  alias: AC Mode - Cold
  trigger:
    platform: state
    entity_id: input_select.ac_mode
    to: "Cold"
  action:
    - service: switch.turn_on
      entity_id: switch.air1
    - service: notify.hassnico_bot
      data_template:
        message: >
           "AC Mode  changed to: {{ trigger.to_state.state }}"

- id: scene-ac-mode-cold-morning
  alias: AC Mode - Cold Morning
  trigger:
    platform: state
    entity_id: input_select.ac_mode
    to: "Cold Morning"
  action:
    - service: notify.hassnico_bot
      data_template:
        message: >
           "AC Mode  changed to: {{ trigger.to_state.state }}"

- id: scene-ac-mode-humidity
  alias: AC Mode - Humidity
  trigger:
    platform: state
    entity_id: input_select.ac_mode
    to: "Himidity"
  action:
    - service: switch.turn_on
      entity_id: switch.air2
    - service: notify.hassnico_bot
      data_template:
        message: >
           "AC Mode  changed to: {{ trigger.to_state.state }}"

- id: scene-ac-mode-humidity-morning
  alias: AC Mode - Humidity Morning
  trigger:
    platform: state
    entity_id: input_select.ac_mode
    to: "Humidity Morning"
  action:
    - service: notify.hassnico_bot
      data_template:
        message: >
           "AC Mode  changed to: {{ trigger.to_state.state }}"

####################################################
#                     Room                         #
#                    Living                        #
####################################################
# - id: living-bright
#   alias: Living Brightness
#   initial_state: 'on'
#   trigger:
#     platform: state
#     entity_id: input_number.Living_bright
#   action:
#     - service: light.turn_on
#       data_template:
#         entity_id: light.living_door_rgb
#         brightness: '{{ states.input_number.Living_bright.state | int }}'

#     - service: light.turn_on
#       data_template:
#         entity_id: light.living_door_rgb
#         brightness: '{{ states.input_number.Living_bright.state | int }}'

####################################################
#                                                  #
#                   PC States                      #
#                                                  #
####################################################
####################################################
#                   PC restart                     #
####################################################

- id: pc-restart
  alias: pc_restart
  trigger:
    platform: state
    entity_id: input_select.pcoptions
    to: "Restart"
  action:
   - service: shell_command.restart_pc
   - service: notify.hassnico_bot
     data:
       message: "PC Restart at {{ states('sensor.date_time') }}"  
   - service: media_player.volume_set
     data:
       entity_id: media_player.nicolo_s_bose_home_speaker_500
       volume_level: 0.3
   - service: notify.alexa_media
     data:
       target: 
         - media_player.nicolo_s_bose_home_speaker_500
       data:
         type: tts
       message: >
        {{ [
        "Il Computer è stato riavviato",
        "Riavvio subito il computer",
        ] | random }}
####################################################
#                   PC Shutdown                    #
####################################################

- id: pc-shutdown
  alias: pc_shutdown
  trigger:
    platform: state
    entity_id: input_select.pcoptions
    to: "Shutdown"
  action:
   - service: shell_command.shutdown_pc
   - service: notify.hassnico_bot
     data:
       message: "PC Shutdown at {{ states('sensor.date_time') }}"
   - service: media_player.volume_set
     data:
       entity_id: media_player.nicolo_s_bose_home_speaker_500
       volume_level: 0.3
   - service: notify.alexa_media
     data:
       target: 
         - media_player.nicolo_s_bose_home_speaker_500
       data:
         type: tts
       message: >
        {{ [
        "Il Computer è stato spento",
        "Spengo subito il computer",
        ] | random }}
####################################################
#                   PC Sleep                       #
####################################################

- id: pc-sleep
  alias: pc_sleep
  trigger:
    platform: state
    entity_id: input_select.pcoptions
    to: "Sleep"
  action:
   - service: shell_command.sleep_pc
   - service: notify.hassnico_bot
     data:
       message: "PC Sleep at {{ states('sensor.date_time') }}"
   - service: media_player.volume_set
     data:
       entity_id: media_player.nicolo_s_bose_home_speaker_500
       volume_level: 0.3
   - service: notify.alexa_media
     data:
       target: 
         - media_player.nicolo_s_bose_home_speaker_500
       data:
         type: tts
       message: >
        {{ [
        "Il Computer è entrato in stato sleep",
        "Metto in modalita sleep il computer",
        ] | random }}
####################################################
#                   PC Hibernate                   #
####################################################

- id: pc-hibernate
  alias: pc_hibernate
  trigger:
    platform: state
    entity_id: input_select.pcoptions
    to: "Hibernate"
  action:
   - service: shell_command.hibernate_pc
   - service: notify.hassnico_bot
     data:
       message: "PC Hibernated at {{ states('sensor.date_time') }}"
   - service: media_player.volume_set
     data:
       entity_id: media_player.nicolo_s_bose_home_speaker_500
       volume_level: 0.3
   - service: notify.alexa_media
     data:
       target: 
         - media_player.nicolo_s_bose_home_speaker_500
       data:
         type: tts
       message: >
        {{ [
        "Il Computer è stato ibernato",
        "Iberno subito il computer",
        ] | random }}
####################################################
#                                                  #
#            Home-System Health Check              #
#                                                  #
####################################################
####################################################
#                A/C Self Shutdown                 #
####################################################

- id: ac-self-shutdown
  alias: AC Self Shutdown - Heat
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        #- switch.air_conditioner_heat_30
        #- switch.air_conditioner_cold_18
        #- switch.air_conditioner_humidity
        - switch.air  #Aria Fredda
        - switch.air2 #Deumidificatore
        - switch.air3 #Aria Calda
      to: 'on'
      for: '02:00:00'
  action:
    - service: switch.turn_off
      data_template:
        entity_id: " {{ trigger.entity_id }} "
    - service: notify.hassnico_bot
      data_template:
        message: >
          "{{ trigger.to_state.attributes.friendly_name }} just changed from {{ trigger.to_state.state }}
          to {{ trigger.from_state.state }} - AC Self shutdown Notify"
    - service: media_player.volume_set
      data:
        entity_id: media_player.nicolo_s_bose_home_speaker_500
        volume_level: 0.3
    - delay: 00:00:03
    - service: notify.alexa_media
      data:
        target: 
          - media_player.nicolo_s_bose_home_speaker_500
        data:
          type: tts
        message: >
         {{ [
         "Sto morendo di freddo ragazzi, ora spengo l'aria condizionata",
         "L'aria fredda si è spenta automaticamente",
         "Brrrr fa freddissimo, ora spengo l'aria condizionata",
         "Mancano solo i pinguini in questa casa, sembra di essere al polo nord, ora spengo l'aria condizionata",
         "Ci son due coccodrilli ed un orango tango due piccoli serpenti e un’aquila reale il gatto il topo l’elefante non manca più nessuno solo non si vedono i due pinguini",
         "Ragazzi, Vi voglio bene, ma devo spengere l'aria condizionata, sto morendo di freddo",
         "Qualcuno ha spento l'aria condizionata, chissà chi è stato!"
         ] | random }}

####################################################
#                TTS Clear Cache                   #
####################################################

- id: TTS-flush-cache
  alias: Flush TTS Cache
  initial_state: 'on'
  hide_entity: True
  trigger:
    platform: time
    at: '2:35:00'
  action:
   service: tts.clear_cache

####################################################
#                                                  #
#                   Telegram                       #
#                   Keyboard                       #
####################################################

### Start Keyboard ###
- id: telegram-start
  alias: 'Telegram Start Command'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/start'
  action:
  - service: notify.hassnico_bot
    data:
      message: >
       {{ [
       "Ciao, sono il tuo assistente di casa.. Ti elenco seguito la lista dei comandi disponibili",
       "Come posso esserti utile?",
       "Yes Sir!",
       "Se proprio insisti, questa è la lista dei comandi",
       "Aaaaa.. ancora qui?",
       "E' un piacere rivederti"
       ] | random }}       
      data:
        keyboard:
          - '/nico, /mamma'
          - '/nicopcon, /nicopcoff, /nicopcreboot'
          - '/ping, /camera'
          - '/start, /cp'

### Stop Keyboard ###
- alias: Telegram_Bot_Stop
  hide_entity: true
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /stop
  action:
  - service: notify.hassnico_bot
    data_template:
      message: '*Control Panel*'
      data:
        inline_keyboard:
          - "\U0001F4A1 Lights:/lights, \U0001F6A8 Security:/security"
          - "\U0001F4BB System:/system, \U0001F4BB Status:/status, Help:/help, Ping:/ping"
          - "\U0001F4C4 Sommario:/Sommario, \U00002600 Weather:/weather"
          - "Addons:/addons"
          #- "Gimme Pizza:/gimmepizza, No thanks:/nopizza"


####################################################
#                   Camera SS                      #
####################################################
- id: telegram-camera-ss
  alias: 'Camera command'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/camera'
  action:
  - service: notify.hassnico_bot
    data:
      message: 'E1 Pro - Salone - Snapshot'
  - service: script.camera_snapshot


####################################################
#                   HA restart                     #
####################################################
- id: telegram-ha-restart
  alias: 'Home Assistant restart'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/harestart'
  action:
  - service: notify.alexa_media
    data:
      target: 
        - media_player.nicolo_s_bose_home_speaker_500
      data:
        type: tts
      message: >
       {{ [
       "Home Assistant si sta riavviando",
       "Riavvio Home Assistant",
       "Sto riavvando Home Assistant",
       "Riavvio Home Assistant",
       ] | random }}
  - service: script.restart_ha
  - service: notify.hassnico_bot
    data:
      message: 'HA - Restart - Triggered'

####################################################
#              Automation reload                   #
####################################################
#- id: telegram-automation-reload
  #alias: 'Automation reload'
  #initial_state: 'on'
  #trigger:
    #platform: event
    #event_type: telegram_command
    #event_data:
      #command: '/automreload'
  #action:
  #- service: script.reload_automations
  #- service: notify.hassnico_bot
    #data:
      #message: 'Automation - Reload - Triggered'

####################################################
#                   SSH Web Start                  #
####################################################
#- id: telegram-ssh-start
  #alias: 'SSH Start'
  #initial_state: 'on'
  #trigger:
    #platform: event
    #event_type: telegram_command
    #event_data:
      #command: '/sshweb'
  #action:
  #- service: notify.hassnico_bot
    #data:
      #message: 'SSH Enabled... HASSIO is available at https://nico-casetta.dyndns.org:7681'
  #- service: hassio.addon_start
    #data:
      #addon: "a0d7b954_ssh"

####################################################
#                   SSH Web Stop                  #
####################################################
#- id: telegram-ssh-stop
  #alias: 'SSH OFF'
  #initial_state: 'on'
  #trigger:
    #platform: event
    #event_type: telegram_command
    #event_data:
      #command: '/sshoff'
  #action:
  #- service: notify.hassnico_bot
    #data:
      #message: 'SSH Stopped'
  #- service: hassio.addon_stop
    #data:
      #addon: "a0d7b954_ssh"
      

####################################################
#                   GPS Message                    #
####################################################

- id: telegram-nico-gps
  alias: 'GPS Notify Nico'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/nico'
  action:
  - service: notify.hassnico_bot
    data:
      message: 'Nico GPS Position'
  - service: script.nico_gps_notify_telegram

- id: telegram-mom-gps
  alias: 'GPS Notify Mom'
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/mamma'
  action:
  - service: notify.hassnico_bot
    data:
      message: 'Mom GPS Position'  
  - service: script.mamma_gps_notify_telegram


####################################################
#               Certificate Renew                  #
####################################################
- id: telegram-ca-renew
  alias: 'Certificate Renew'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/certificate'
  action:
  - service: script.letsencrypt_renew


####################################################
#                   Ping Pong                      #
####################################################
- id: telegram-ping-pong
  alias: 'Telegram bot that reply pong to ping'
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/ping'
  action:
  - service: notify.hassnico_bot
    data:
      message: 'pong'

####################################################
#               Nico PC - ON/OFF                   #
####################################################

- id: telegram-nico-pc-on
  alias: 'Telegram - Nico PC ON'
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/nicopcon'
  action:
  - service: notify.hassnico_bot
    data:
      message: >
       {{ [
       "Il PC è stato accesso",
       "Accendero il tuo PC nel piu breve tempo possibile!",
       "Yes Sir! Accendo subito il PC",
       "Aaaaa.. vuoi nuovamente che accendo il PC? Quanto rompi!",
       "Hmmm.. ok dai ti accendo il PC"
       "3.. 2.. 1.. ON"
       ] | random }}
  - service: switch.turn_on
    entity_id: switch.nico_computer


- id: telegram-nico-pc-off
  alias: 'Telegram - Nico PC OFF'
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/nicopcoff'
  action:
  - service: notify.hassnico_bot
    data:
      message: >
       {{ [
       "Il PC è stato Spento",
       "Eddajee te lo spengooo",
       "Yes Sir! Spengo subito il PC",
       "Aaaaa.. vuoi nuovamente che spengo il PC? Quanto rompi!",
       "Hmmm.. ok dai ti spengo il PC"
       "3.. 2.. 1.. Off"
       ] | random }}
  - service: shell_command.shutdown_pc

- id: telegram-nico-pc-reboot
  alias: 'Telegram - Nico PC Reboot'
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/nicopcreboot'
  action:
  - service: notify.hassnico_bot
    data:
      message: >
       {{ [
       "Il PC è stato Riavviato",
       "Eddajee te lo riavvio",
       "Yes Sir! Riavvio subito il PC",
       "Aaaaa.. vuoi nuovamente che riavvio il PC? Quanto rompi!",
       "Hmmm.. ok dai ti riavvio il PC"
       "3.. 2.. 1.. Reboott"
       ] | random }}
  - service: shell_command.restart_pc

####################################################
#                                                  #
#                   Telegram                       #
#                Inline Keyboard                   #
####################################################
#############################
### Start Inline Keyboard ###
#############################
- id: telegram-control-pannel-start
  alias: 'Telegram Control Pannel Command'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/cp'
  action:
  - service: notify.hassnico_bot
    data:
      message: >
       {{ [
       "Home Assistant Status",
       "Control Panel",
       "Yes Sir!",
       "Home Assistant Control Panel",
       "Pannello di controllo"
       ] | random }}       
      data:
        inline_keyboard:
          - "\U0001F4A1 Lights:/lights, \U0001F6A8 Security:/security"
          - "\U0001F4BB System:/system, \U00002139 Status:/status, Help:/help, Ping:/ping"
          - "\U0001F4C4 Sommario:/Sommario, \U00002600 Weather:/weather"
          - "Addons:/addons"
          #- "Gimme Pizza:/gimmepizza, No thanks:/nopizza"


####################
### IK Ping Pong ###
####################
- id: telegram-ik-ping-pong
  alias: 'telegram ping pong'
  hide_entity: true
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: '/ping'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: >-
          Callback received from {{ trigger.event.data.from_first }}.
          Message id: {{ trigger.event.data.message.message_id }}.
          Data: {{ trigger.event.data.data }}
          {{now().strftime("%H:%M:%S %Y-%m-%d")}} Pong, Message from {{ trigger.event.data["user_id"] }}.
        show_alert: true


####################
### IK Weather ###
####################
- id: telegram-weather-info
  alias: Weather Info
  hide_entity: true
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /weather
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Weather
  - service: notify.hassnico_bot
    data_template:

      message: >- 
        
        {{ "\U00002600" }} *Weather*:
        
        ------------------------------------------------
        
        *Tempo*:   {{ states.sensor.dark_sky_summary_tmpl.state}}
        
        *Temp. Tomorrow Max/Min*:   {{ states.sensor.dark_sky_daytime_high_temperature_1d.state}}/{{ states.sensor.dark_sky_overnight_low_temperature_1d.state}} °C
        
        *Forecasts*:   {{ states.sensor.dark_sky_hourly_summary_tmpl.state}}
        
      data:
        inline_keyboard:
        - '{{ "\u21a9\ufe0f" }} Control Panel:/stop'


#################
### IK Status ###
#################
- id: telegram-system-status
  alias: System status
  hide_entity: true
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /status
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: System Status
  - service: notify.hassnico_bot
    data_template:
      message: >- 

        {{ "\U0001F4BB" }} *System*:
        
        ------------------------------------------------        
        
        *CPU Usage*:   {{ states.sensor.processor_use.state }} %
        
        *CPU Up Time*:   {{ states.sensor.uptime.state }} h
        
        *Last Reboot*:   {{ states.sensor.last_boot.state }}
        
        *Temp CPU*:   {{ states.sensor.cpu_temp.state }} °C
        
        *Free Memory*:   {{ states.sensor.memory_free.state }} Mb
        
        *Memory Used*:   {{ states.sensor.memory_usage_real.state }} %
          
      data:
        inline_keyboard:
        - '{{ "\u21a9\ufe0f" }} Control Panel:/stop'

#########################
### IK Security Alarm ###
#########################
- id: telegram-ik-security-alarm
  alias: 'Telegram Alarm'
  hide_entity: true
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: '/security'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Alarm control'
    - service: telegram_bot.edit_message
      data_template:
        message_id: 'last'
        chat_id: '{{ trigger.event.data.user_id }}'
        message: >
            {% if is_state("input_boolean.burglar_alarm_door", "off") %}Alarm is OFF. {% else %}Alarm is ON. {% endif %}
            {% if is_state("input_boolean.away_scene", "off") %}Presence simulation is OFF. {% else %}Presence simulation is ON. {% endif %}
        inline_keyboard:
          - 'Away ON:/away_on, Away OFF:/away_off'
          - 'Alarm ON:/alarm_on, Alarm OFF:/alarm_off, Cancel:/cancel'


#####################
### IK Pizza Time ###
#####################
- alias: 'Want pizza?'
  hide_entity: true
  trigger:
    platform: time
    at: '18:30:00'    
  condition:
    - condition: state
      entity_id: device_tracker.iphone
      state: 'home'
    - condition: state
      entity_id: device_tracker.nico_nico
      state: 'not_home'
  action:
    - service: telegram_bot.send_message
      data_template:
        title: 'Want pizza?'
        target: -189154344
        message: 'You look like you are home alone. Should I order you a pizza?'
        inline_keyboard:
          - "Gimme Pizza:/gimmepizza"
          - "No thanks:/nopizza"

- alias: 'No pizza'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/nopizza'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Ok, no pizza then'

- alias: 'gimme pizza'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/gimmepizza'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'PIZZA TIME'
    - service: dominos.order
      data:
        order_entity_id: dominos.medium_pan


#################
### IK Lights ###
#################
- alias: 'Lights Actions'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/lights'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'What you want to do with Lights?'  
    - service: telegram_bot.send_message
      data_template:
        title: 'Lights ON or OFF?'
        target: -189154344
        message: 'Look like you want to turn on or off your lights. What you want to do?'
        inline_keyboard:
          - "ALL ON:/lighton, Living ON:/Living_on, Bedroom ON:/bedroom_on"
          - "ALL OFF:/lightoff, Living OFF :/Living_off, Bedroom OFF:/bedroom_off"
          - "Kitchen ON:/kitchen_on, BathRoom ON:/bath_on"
          - "Kitchen OFF:/kitchen_off, BathRoom OFF:/bath_off"

### All ligths
- alias: 'IK - Telegram - Light On'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/lighton'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Lights ON'
    - service: switch.turn_on
      data:
        entity_id: group.lights
        #brightness: 255

- alias: 'IK - Telegram - Light Off'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/lightoff'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Lights OFF'
    - service: switch.turn_off
      data:
        entity_id: group.lights
        #brightness: 0

### Living ###
- alias: 'IK - Telegram - Living Light On'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/Living_on'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Living Lights ON'
    - service: switch.turn_on
      data:
        entity_id: group.living
        #brightness: 255

- alias: 'IK - Telegram - Living Light OFF'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/Living_off'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Living Lights OFF'
    - service: switch.turn_off
      data:
        entity_id: group.living
        #brightness: 0

### Kitchen
- alias: 'IK - Telegram - Kitchen Light On'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/kitchen_on'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Kitchen Lights ON'
    - service: switch.turn_on
      data:
        entity_id: group.kitchen
        #brightness: 255

- alias: 'IK - Telegram - Kitchen Light OFF'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/kitchen_off'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Kitchen Lights OFF'
    - service: switch.turn_off
      data:
        entity_id: group.kitchen
        #brightness: 0


### Bed Room
- alias: 'IK - Telegram - BedRoom Light On'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/bedroom_on'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'BedRoom Lights ON'
    - service: switch.turn_on
      data:
        entity_id: group.bedroom
        #brightness: 255

- alias: 'IK - Telegram - BedRoom Light OFF'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/bedroom_off'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'BedRoom Lights OFF'
    - service: switch.turn_off
      data:
        entity_id: group.bedroom
        #brightness: 0

### Bath Room
- alias: 'IK - Telegram - BathRoom Light On'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/bath_on'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'BathRoom Lights ON'
    - service: switch.turn_on
      data:
        entity_id: group.bathroom
        ##brightness: 255

- alias: 'IK - Telegram - BathRoom Light OFF'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/bath_off'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'BathRoom Lights OFF'
    - service: switch.turn_off
      data:
        entity_id: group.bathroom
        #brightness: 0


#################
### IK System ###
#################
- alias: 'HA System Actions'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/system'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'What actions you want to do on HA?'  
    - service: telegram_bot.send_message
      data_template:
        title: 'HA System Actions'
        target: -189154344
        message: 'Look like you want to do something about your Home Assistant istance.. What you want to do?'
        inline_keyboard:
          - "Check Config:/config, Automation Reload:/automreload"
          - "SSL certificate:/ssl, SSL Renew:/sslrenew"
          - "HA Restart:/harestart, Host Reboot:/hassioreboot"
          


### Automation reload
- alias: 'IK - Telegram - Automation reload'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/automreload'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Automation Reload'
    - service: script.reload_automations
    - service: notify.hassnico_bot
      data:
        message: 'Automation - Reload - Triggered'

### HA Restart
- alias: 'IK - Telegram - HA Restart'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/harestart'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'HA restart'
    - service: script.restart_ha
    - service: notify.hassnico_bot
      data:
        message: 'HA - Restart - Triggered'

### SSL Renew
- alias: 'IK - Telegram - SSL Renew'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/sslrenew'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'SSL Renew'
    - service: script.letsencrypt_renew
    - service: notify.hassnico_bot
      data:
        message: 'SSL - Renew - Triggered'


### Host Reboot
- alias: 'IK - Telegram - Host Reboot'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/hassioreboot'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Host Reboot'
    - service: hassio.host_reboot
    - service: notify.hassnico_bot
      data:
        message: 'Host - Reboot - Triggered'


#################
### IK Addons ###
#################
- alias: 'Addons Actions'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/addons'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'What you want to do with these addons?'  
    - service: telegram_bot.send_message
      data_template:
        title: 'Addons'
        target: -189154344
        message: 'Look like you want to turn on or off your Addons. What you want to do?'
        inline_keyboard:
          - "Web SSH ON:/webssh_on, Pi-Hole ON:/pihole_on"
          - "Web SSH OFF:/webssh_off, Pi-Hole OFF:/pihole_off"
          - "IDE ON:/ide_on, LogViewer ON:/logview_on"
          - "IDE OFF:/ide_off, LogViewer OFF:/logview_off"
          - "NodeRed ON:/nodered_on, NodeRed OFF:/nodered__off"


### Addon SSH Web Start
- alias: 'IK - Telegram - Addon SSH Web Start'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/webssh_on'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Addon SSH Web Start - Triggered'
    - service: hassio.addon_start
      data:
        addon: "a0d7b954_ssh"
    - service: notify.hassnico_bot
      data:
        message: 'SSH Enabled... Web SSH is available at https://nico-casetta.dyndns.org:7681'

### Addon SSH Web Stop
- alias: 'IK - Telegram - Addon SSH Web Stop'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/webssh_off'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Addon SSH Web Stop - Triggered'
    - service: hassio.addon_stop
      data:
        addon: "a0d7b954_ssh"
    - service: notify.hassnico_bot
      data:
        message: 'Addon SSH Web Stopped'

### Addon Log Viewer Start
- alias: 'IK - Telegram - Addon  Log Viewer Start'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/logview_on'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Addon  Log Viewer Start - Triggered'
    - service: hassio.addon_start
      data:
        addon: "a0d7b954_logviewer"
    - service: notify.hassnico_bot
      data:
        message: ' Log Viewer... Log Viewer is available at https://nico-casetta.dyndns.org:4277'

### Addon Log Viewer Stop
- alias: 'IK - Telegram - Addon  Log Viewer Stop'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/logview_off'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Addon  Log Viewer Stop - Triggered'
    - service: hassio.addon_stop
      data:
        addon: "a0d7b954_logviewer"
    - service: notify.hassnico_bot
      data:
        message: 'Addon  Log ViewerStopped'

### Addon Pi-Hole Start
- alias: 'IK - Telegram - Addon  Pi-Hole Start'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/logview_on'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Addon  Pi-Hole Start - Triggered'
    - service: hassio.addon_start
      data:
        addon: "a0d7b954_pi-hole"
    - service: notify.hassnico_bot
      data:
        message: 'Pi-Hole is available at https://nico-casetta.dyndns.org:4277'

### Addon Pi-Hole Stop
- alias: 'IK - Telegram - Addon  Pi-Hole Stop'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/logview_off'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Addon  Pi-Hole Stop - Triggered'
    - service: hassio.addon_stop
      data:
        addon: "a0d7b954_pi-hole"
    - service: notify.hassnico_bot
      data:
        message: 'Addon  Pi-Hole Stopped'

### Addon IDE Start
- alias: 'IK - Telegram - Addon  IDE Start'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/ide_on'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Addon  IDE Start - Triggered'
    - service: hassio.addon_start
      data:
        addon: "a0d7b954_ide"
    - service: notify.hassnico_bot
      data:
        message: 'IDE is available at https://nico-casetta.dyndns.org:4277'

### Addon IDE Stop
- alias: 'IK - Telegram - Addon  IDE Stop'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/ide_off'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Addon  IDE Stop - Triggered'
    - service: hassio.addon_stop
      data:
        addon: "a0d7b954_ide"
    - service: notify.hassnico_bot
      data:
        message: 'Addon  IDE Stopped'

### Addon NodeRed Start
- alias: 'IK - Telegram - Addon  NodeRed Start'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/nodered_on'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Addon  NodeRed Start - Triggered'
    - service: hassio.addon_start
      data:
        addon: "a0d7b954_nodered"
    - service: notify.hassnico_bot
      data:
        message: 'NodeRed is available at https://nico-casetta.dyndns.org:1880'

### Addon NodeRed Stop
- alias: 'IK - Telegram - Addon  NodeRed Stop'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/nodered_off'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Addon  NodeRed Stop - Triggered'
    - service: hassio.addon_stop
      data:
        addon: "a0d7b954_nodered"
    - service: notify.hassnico_bot
      data:
        message: 'Addon  NodeRed Stopped'


#################
### IK Help ###
#################
- alias: 'Help'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/help'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Help sections'  
    - service: telegram_bot.send_message
      data_template:
        title: 'Help'
        target: -189154344
        message: 'Look like you want to turn on or off your Addons. What you want to do?'
        inline_keyboard:
          - "Info Service Port:/info"

### help info
- alias: 'IK - Telegram - Help Info'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/info'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: "Help info - Triggered"
  - service: notify.hassnico_bot
    data_template:

      message: >-

         {{ "\U0001F4BB" }} *Info*:

         ------------------------------------------------
          
         *HA*:   https://nico-casetta.dyndns.org:8123
          
         *SSH Web*:   https://nico-casetta.dyndns.org:7681
          
         *Log Viewer*:   https://nico-casetta.dyndns.org:4277
          
         *Node Red*:   https://nico-casetta.dyndns.org:1880
          
         *Pi-Hole*:    https://nico-casetta.dyndns.org:4865

      data:
        inline_keyboard:
        - '{{ "\u21a9\ufe0f" }} Control Panel:/stop'



####################################################
#                                                  #
#                   Themes                         #
#                                                  #
####################################################
####################################################
#                   Sunset                         #
####################################################

- id: themes-sunset
  alias: Random Darker Theme At Sunset
  initial_state: true
  trigger:
    platform: sun
    event: sunset
  action:
    - service: frontend.set_theme
      data_template:
        name: '{{ ["darkcyan", "darkred", "midnight", "darkorange", "darkblue", "slate"] | random  }}'

####################################################
#                   Sunrise                        #
####################################################

- id: themes-sunrise
  alias: Random Lighter Theme At Sunrise
  initial_state: true
  trigger:
    platform: sun
    event: sunrise
  action:
    - service: frontend.set_theme
      data_template:
        name: '{{ ["default", "slate"] | random  }}'

####################################################
#                                                  #
#                   Log Level                      #
#                                                  #
####################################################

- id: log-level
  alias: Log Level
  trigger:
    platform: state
    entity_id: input_select.log_level
  action:
    service: logger.set_level
    data_template:
      homeassistant.components: "{{ trigger.to_state.state }}"

####################################################
#                                                  #
#                   Owntracks                      #
#                                                  #
####################################################

- id: owntracks-refresh
  alias: Owntracks Refresh
  trigger:
    - platform: time_pattern
      minutes: '/5'
      seconds: 0
  action:
    service: script.owntracks_update

####################################################
#                                                  #
#             Time Based Automation                #
#                                                  #
####################################################
####################################################
#            A/C Time Based Automations            #
####################################################
- id: ac-hot-morning-on
  alias: AC - Hot Morning - ON
  trigger:
    platform: time
    at: '07:30:00'
  condition:
   - condition: time
     weekday:
       - mon
       - tue
       - wed
       - thu
       - fri
   - condition: state
     entity_id: input_select.ac_mode
     state: "Hot Morning"
  action:
    - service: switch.turn_on
      entity_id: switch.air_conditioner_heat_30
    - service: notify.hassnico_bot
      data:
        message: "AC Morning ON - Heat 30 - Automation"

- id: ac-cold-morning-on
  alias: AC - Cold Morning - ON
  trigger:
    platform: time
    at: '07:30:00'
  condition:
   - condition: time
     weekday:
       - mon
       - tue
       - wed
       - thu
       - fri
   - condition: state
     entity_id: input_select.ac_mode
     state: "Cold Morning"
  action:
    - service: switch.turn_on
      entity_id: switch.air_conditioner_cold_18
    - service: notify.hassnico_bot
      data:
        message: "AC Morning ON - Cold 18 - Automation  {{ trigger.entity_id }} "

- id: ac-morning-off
  alias: AC - Morning - OFF
  trigger:
    platform: time
    at: '08:00:00'
  condition:
   - condition: time
     weekday:
       - mon
       - tue
       - wed
       - thu
       - fri
  action:
    - service: switch.turn_off
      entity_id: switch.air_conditioner_heat_30
    - service: switch.turn_off
      entity_id: switch.air_conditioner_cold_18
    - service: switch.turn_off
      entity_id: switch.air_conditioner_humidity            
    - service: notify.hassnico_bot
      data:
        message: "AC Morning OFF - Automation. {{ trigger.entity_id }}"

####################################################
#                                                  #
#                   Test Space                     #
#                                                  #
####################################################
####################################################
#                      Zoning                      #
####################################################

- alias: "Ritorno a casa"
  trigger:
    platform: state
    entity_id: group.family
    #from: 'not_home'
    to: 'home'
  #condition: []
  action:
    - delay:
        seconds: 5
    - service: notify.alexa_media
      data:
        target:
          - media_player.nicolo_s_bose_home_speaker_500
        data:
          type: tts
        message: >
         {{ [
         "Sono felice di rivedervi",
         "Bentornati a casa.",
         ] | random }}
    - service: rest_command.ss_home_on

- alias: "Uscita da casa"
  trigger:
    platform: state
    entity_id: group.family
    #from: 'home'
    to: 'not_home'
  #condition: []
  action:
    - delay:
        seconds: 5
    - service: notify.alexa_media
      data:
        target:
          - media_player.nicolo_s_bose_home_speaker_500
        data:
          type: tts
        message: >
         {{ [
         "Mi Dispiace che ve ne andate",
         "Spero di rivedervi presto",
         ] | random }}
    - service: rest_command.ss_home_off

####################################################
#                                                  #
#                    IFTTT                         #
#                                                  #
####################################################        
        
        
- alias: IFTTT - Test Notification Received 
  initial_state: 'on'
  trigger:        
    platform: event
    event_type: ifttt_webhook_received
    event_data:
      action: call_service
  action:
    service_template: '{{ trigger.event.data.service }}'
    data_template:
      entity_id: '{{ trigger.event.data.entity_id }}'


- alias: IFTTT - Startup Notification
  initial_state: 'on'
  trigger:
    platform: homeassistant
    event: start
  action:
    service: ifttt.trigger
    data: {"event":"HA_Start", "value1":"Hello World!"}

- alias: IFTTT - Startup Notification two
  trigger:
    platform: homeassistant
    event: start
  action:
    service: script.ifttt_notify
    data_template:
      value1: 'HA Status:'
      value2: "{{ trigger.event.data.entity_id.split('_')[1] }} is "
      value3: "{{ trigger.event.data.to_state.state }}"

####################################################
#                                                  #
#                    Alarm                         #
#                                                  #
####################################################        


- alias: 'Trigger alarm while armed away'
  trigger:
    - platform: state
      entity_id: sensor.pir1
      to: 'active'
    - platform: state
      entity_id: sensor.pir2
      to: 'active'
    - platform: state
      entity_id: sensor.door
      to: 'open'
    - platform: state
      entity_id: sensor.window
      to: 'open'
  condition:
    - condition: state
      entity_id: alarm_control_panel.ha_alarm
      state: armed_away
  action:
    - service: alarm_control_panel.alarm_trigger
      entity_id: alarm_control_panel.ha_alarm



- alias: 'Send notification when alarm triggered'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.ha_alarm
      to: 'triggered'
  action:
    - service: notify.hassnico_bot
      data:
        message: "ALARM! The alarm has been triggered"


- alias: 'Disarm alarm when door unlocked by keypad'
  trigger:
    - platform: state
      entity_id: sensor.front_door_lock_alarm_type
      to: '19'
      # many z-wave locks use Alarm Type 19 for 'Unlocked by Keypad'
  action:
    - service: alarm_control_panel.alarm_disarm
      entity_id: alarm_control_panel.house_alarm


####Alarm Mode Notify ###

- alias: 'Send notification when alarm is Disarmed'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'disarmed'
  action:
    - service: notify.hassnico_bot
      data:
        message: "ALARM! The alarm is Disarmed at {{ states('sensor.date_time') }}"

- alias: 'Send notification when alarm is in pending status'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'pending'
  action:
    - service: notify.hassnico_bot
      data:
        message: "ALARM! The alarm is in pending status at {{ states('sensor.date_time') }}"

- alias: 'Send notification when alarm is Armed in Away mode'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'armed_away'
  action:
    - service: notify.hassnico_bot
      data:
        message: "ALARM! The alarm is armed in Away mode {{ states('sensor.date_time') }}"

- alias: 'Send notification when alarm is Armed in Home mode'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'armed_home'
  action:
    - service: notify.hassnico_bot
      data:
        message: "ALARM! The alarm is armed in Home mode {{ states('sensor.date_time') }}"
      
####################################################
#                                                  #
#                    Backups                       #
#                                                  #
####################################################          

- alias: Weekly Backup Friday at 3 AM
  initial_state: 'on'
  trigger:
    platform: time
    at: '03:00:00'
  condition:
  - condition: time
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
  - service: hassio.snapshot_full
    data_template:
      name: Automated Backup {{ now().strftime('%Y-%m-%d') }}
  - service: notify.hassnico_bot
    data_template:
      message: Creating backup named "Automated Backup {{ now().strftime('%Y-%m-%d') }}"


- alias: Weekly Backup to Google Friday at 3:30 AM
  initial_state: 'on'
  trigger:
    platform: time
    at: '03:30:00'
  condition:
  - condition: time
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
  - service: rest_command.google_backup


####################################################
#                                                  #
#               Security Breaches                  #
#                                                  #
####################################################  
####################################################
#                     Email                        #
####################################################

- alias: Notify - Emailbreach
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: group.security
    to: 'on'
  condition: []
  action:
  - service: notify.hassnico_bot
    data_template:
      title: 'Security issue:'
      message: "Email address {{ trigger.to_state.attributes.friendly_name }} has been found in a compromised database: {{ trigger.to_state.attributes.breach }}."
      who: 'everyone'

####################################################
#                                                  #
#                  Earthquakes                     #
#                                                  #
####################################################  
  # - alias: 'Earth Quake Alert'
  #   trigger:
  #     platform: geo_location
  #     source: usgs_earthquakes_feed
  #     zone: zone.earth_quake_alert_zone
  #     event: enter
  #   condition:
  #     condition: template
  #     value_template: "{{ trigger.event.data.entity_id.startswith('geo_location.m') and
  #          distance('device_tracker.nico_nico')|int <= 50 }}"
  #   action:
  #    - service: notify.hassnico_bot
  #      data_template:
  #      message: >
  #         message: "ALARM! Earth Quake Detected {{ states('sensor.date_time') }}"
  #    - service: hassio.addon_stdin
  #      data_template:
  #        addon: 89275b70_dss_voip
  #        input: {"call_sip_uri":"sip:+393402703738@sip.voipcheap.com","message_tts":"E' stato registrato un Terremoto"}

####################################################
#                                                  #
#                  Earthquakes 2                   #
#                                                  #
####################################################  
# - alias: Lightning Timer Start
#   initial_state: 'on'
#   trigger:
#      platform: event
#      event_type: state_changed
#   condition:
#   - condition: template
#     value_template: >
#       {{ trigger.event.data.old_state is none and
#          trigger.event.data.entity_id.startswith('geo_location.m_') }}
#   action:
#   - service: input_text.set_value
#     data_template:
#       entity_id: input_text.last_strike
#       value: "{{ trigger.event.data.new_state.state }}"
#   # This will start, or restart, the timer.
#   - service: timer.start
#     data:
#       entity_id: timer.lightning_timer
#       duration: '00:30:00'

- alias: 'Earth Quake Alert'
  trigger:
    platform: geo_location
    source: usgs_earthquakes_feed
    zone: zone.earth_quake_alert_zone
    event: enter
  condition:
    condition: template
    value_template: "{{ trigger.to_state.attributes.type == 'earthquake' }}"
  action:
    - service: persistent_notification.create
      data_template:
        message: "{{ trigger.to_state.name }} - {{ trigger.to_state.attributes.status }}"
        title: "Earth Quake Alert"
        
    - service: notify.hassnico_bot
      data_template:
        message: "ALARM! Earth Quake Detected {{ states('sensor.date_time') }}"
        
    - service: hassio.addon_stdin
      data_template:
        addon: 89275b70_dss_voip
        input: {"call_sip_uri":"sip:+393402703738@sip.voipcheap.com","message_tts":"Allerta, E' stato registrato un Terremoto con intensità superiore a 4"}

####################################################
#                                                  #
#                  Covers                          #
#                                                  #
####################################################  
- alias: 'Set Living Room Cover position'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_number.living_room_cover
  action:
    # - delay: '00:00:3'
    - service: cover.set_cover_position
      entity_id: cover.shelly_shsw_25_e6704f
      data:
        position: "{{ states('input_number.living_room_cover') | int }}"


####################################################
#                                                  #
#                Shelly Notifications              #
#                                                  #
####################################################  


- alias: Flood Sensor - Notification
  initial_state: 'on'
  trigger:
    platform: template
    value_template: "{{ is_state_attr('sensor.shelly_shwt_1_694834_flood', 'flood', 'true') }}"
  action:
    - service: notify.hassnico_bot
      data:
        message: "C'è una perdita d'acqua in magazzino"
    - service: media_player.volume_set
      data:
        entity_id: media_player.nicolo_s_bose_home_speaker_500
        volume_level: 0.3
    - delay: 00:00:20
    - service: notify.alexa_media
      data:
        target: 
          - media_player.nicolo_s_bose_home_speaker_500
        data:
          type: tts
        message: >
         {{ [
         "C'è una perdita d'acqua in magazzino, controllare per terra vicino alla lavatrice", 
         "C'è una perdita d'acqua in magazzino, controllare per terra vicino alla lavatrice", 
         "C'è una perdita d'acqua in magazzino, controllare per terra vicino alla lavatrice", 
         "C'è una perdita d'acqua in magazzino, controllare per terra vicino alla lavatrice", 
         "C'è una perdita d'acqua in magazzino, controllare per terra vicino alla lavatrice",                  
         ] | random }}












###################################################################################################################################################










# https://github.com/arsaboo/homeassistant-config/blob/master/automations.yaml
###############################################################
## Presence
################################################################

- id: person_logging
  alias: 'Log person changes'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - person.alok
        - person.rashmi
  condition:
    - condition: template
      value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  action:
    - service: logbook.log
      data_template:
        name: "Person: "
        message: "{{trigger.to_state.name}} changed from {{trigger.from_state.state}} to {{trigger.to_state.state}} by {{ trigger.to_state.attributes.source }}"

- id: update_meta_tracker
  alias: "Update Device Meta Tracker"
  initial_state: 'on'
  trigger:
    # Delayed action for router-based and Owntracks trackers that are not 100% reliable
    - platform: state
      entity_id:
        - device_tracker.aloks_iphone
        - device_tracker.rashmiphone
        - device_tracker.alokphone_alokphone_2
        - device_tracker.rashmiphone_rashmiphone_2
      to: 'not_home'
      for: '00:07:00'
    - platform: state
      entity_id:
        - device_tracker.alokphone_alokphone_2
        - device_tracker.rashmiphone_rashmiphone_2
      to: 'home'
      for: '00:00:30'
    - platform: state
      entity_id:
        - device_tracker.alok_s_iphone_2
        - device_tracker.life360_alok_saboo
        - device_tracker.e1594e53_21df_414c_82da_f655d5282fca
        - device_tracker.rashmiappiphone_2
        - device_tracker.life360_sonu
        - device_tracker.b4445761_f6c0_4b7f_835f_cfdc03b47111
    - platform: state
      entity_id:
        - device_tracker.aloks_iphone
        - device_tracker.elantrase_2
        - device_tracker.rashmiphone
      to: 'home'
  action:
    - service: script.updatetracker
      data_template:
        entityid: '{{trigger.entity_id}}'
        fromstate: '{{trigger.from_state.state}}'
        tostate: '{{trigger.to_state.state}}'

- id: update_alok_test_tracker
  alias: "Update Alok Test Tracker"
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - device_tracker.alokphone_alokphone_2
      to: 'not_home'
      for: '00:07:00'
    - platform: state
      entity_id:
        - device_tracker.alokphone_alokphone_2
      to: 'home'
      for: '00:00:30'
    - platform: state
      entity_id:
        - device_tracker.alok_s_iphone_2
        - device_tracker.life360_alok_saboo
        - device_tracker.b4445761_f6c0_4b7f_835f_cfdc03b47111
  action:
    - service: device_tracker.see
      data_template:
        dev_id: test_alok
        location_name: '{{trigger.to_state.state|lower }}'
        # gps: >-
        #   {% if trigger.to_state.attributes.latitude is defined %}
        #     [ '{{ trigger.to_state.attributes.latitude }}' , '{{trigger.to_state.attributes.longitude }}' ]
        #   {%- else -%}
        #     [none, none]
        #   {%- endif -%}
        gps: [ '{{ trigger.to_state.attributes.latitude }}' , '{{trigger.to_state.attributes.longitude }}' ]
        gps_accuracy: >-
          {%- if trigger.to_state.attributes.gps_accuracy is defined -%}
            {{ trigger.to_state.attributes.gps_accuracy }}
          {%- else -%}
            NA
          {%- endif -%}
        attributes:
          update_source: '{{trigger.entity_id}}'
          source_type: '{{ trigger.to_state.attributes.source_type }}'
          velocity: >-
            {%- if trigger.to_state.attributes.velocity is defined -%}
              {{ trigger.to_state.attributes.velocity }}
            {%- elif trigger.to_state.attributes.speed is defined -%}
              {{ trigger.to_state.attributes.speed }}
            {%- else -%}
              NA
            {%- endif -%}
          battery: >-
            {%- if trigger.to_state.attributes.battery is defined -%}
              {{ trigger.to_state.attributes.battery }}
            {%- elif trigger.to_state.attributes.battery_level is defined -%}
              {{ trigger.to_state.attributes.battery_level }}
            {%- else -%}
              NA
            {%- endif -%}
- id: update_alok_test_tracker_router
  alias: "Update Alok Test Tracker Router"
  initial_state: 'on'
  trigger:
    # Delayed action for router-based and Owntracks trackers that are not 100% reliable
    - platform: state
      entity_id:
        - device_tracker.aloks_iphone
      to: 'not_home'
      for: '00:07:00'
    - platform: state
      entity_id:
        - device_tracker.aloks_iphone
        - device_tracker.elantrase_2
      to: 'home'
  action:
    - service: device_tracker.see
      data_template:
        dev_id: test_alok
        location_name: '{{trigger.to_state.state|lower }}'
        attributes:
          update_source: '{{trigger.entity_id}}'
          source_type: '{{ trigger.to_state.attributes.source_type }}'

- id: update_rashmi_test_tracker
  alias: "Update Rashmi Test Tracker"
  initial_state: 'on'
  trigger:
    # Delayed action for router-based and Owntracks trackers that are not 100% reliable
    - platform: state
      entity_id:
        - device_tracker.rashmiphone_rashmiphone_2
      to: 'not_home'
      for: '00:07:00'
    - platform: state
      entity_id:
        - device_tracker.rashmiphone_rashmiphone_2
      to: 'home'
      for: '00:00:30'
    - platform: state
      entity_id:
        - device_tracker.e1594e53_21df_414c_82da_f655d5282fca
        - device_tracker.rashmiappiphone_2
        - device_tracker.life360_sonu
  action:
    - service: device_tracker.see
      data_template:
        dev_id: test_rashmi
        location_name: '{{trigger.to_state.state|lower }}'
        gps: [ '{{ trigger.to_state.attributes.latitude }}' , '{{trigger.to_state.attributes.longitude }}' ]
        gps_accuracy: >-
          {%- if trigger.to_state.attributes.gps_accuracy is defined -%}
            {{ trigger.to_state.attributes.gps_accuracy }}
          {%- else -%}
            NA
          {%- endif -%}
        attributes:
          update_source: '{{trigger.entity_id}}'
          source_type: '{{ trigger.to_state.attributes.source_type }}'
          velocity: >-
            {%- if trigger.to_state.attributes.velocity is defined -%}
              {{ trigger.to_state.attributes.velocity }}
            {%- elif trigger.to_state.attributes.speed is defined -%}
              {{ trigger.to_state.attributes.speed }}
            {%- else -%}
              NA
            {%- endif -%}
          battery: >-
            {%- if trigger.to_state.attributes.battery is defined -%}
              {{ trigger.to_state.attributes.battery }}
            {%- elif trigger.to_state.attributes.battery_level is defined -%}
              {{ trigger.to_state.attributes.battery_level }}
            {%- else -%}
              NA
            {%- endif -%}
- id: update_rashmi_test_tracker_router
  alias: "Update Rashmi Test Tracker Router"
  initial_state: 'on'
  trigger:
    # Delayed action for router-based and Owntracks trackers that are not 100% reliable
    - platform: state
      entity_id:
        - device_tracker.rashmiphone
      to: 'not_home'
      for: '00:07:00'
    - platform: state
      entity_id:
        - device_tracker.rashmiphone
      to: 'home'
  action:
    - service: device_tracker.see
      data_template:
        dev_id: test_rashmi
        location_name: '{{trigger.to_state.state|lower }}'
        attributes:
          update_source: '{{trigger.entity_id}}'
          source_type: '{{ trigger.to_state.attributes.source_type }}'

    # - service: logbook.log
    #   data_template:
    #     name: "Meta Tracker: "
    #     message: "{{trigger.entity_id}} changed from {{trigger.from_state.state}} to {{trigger.to_state.state}}"
    # - service: script.notify_me
#################################################################
## Security System
#################################################################

- id: abode_ios_notifications
  alias: Abode Actionable Notification
  trigger:
    - platform: event
      event_type: abode_alarm
  action:
    - service: notify.ios
      data:
        message: 'Abode alarm triggered!'
        data:
          push:
            badge: 0
            category: "abode_alarm"

- id: disarm_abode_from_away
  alias: 'Disarm Abode from Away'
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: input_select.abodestatus
      state: 'armed_away'
    - condition: state
      entity_id: input_boolean.abodeupdate
      state: 'on'
    - condition: template
      value_template: >
        {%- if states.automation.arm_abode.attributes.last_triggered -%}
          {{ (as_timestamp(now()) - as_timestamp(states.automation.arm_abode.attributes.last_triggered)) > 240 }}
        {%- else -%}
          true
        {%- endif -%}
  trigger:
    - platform: state
      entity_id: group.household
      from: 'not_home'
      to: 'home'
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: DISARM_ABODE
  action:
     service: homeassistant.turn_on
     entity_id: script.abodestandby

- id: close_garage_door_notification
  alias: 'Close Garage Door Notification'
  initial_state: 'on'
  condition:
    condition: state
    entity_id: cover.garagedoor
    state: 'open'
  trigger:
    - platform: state
      entity_id: input_select.abodestatus
      to: 'armed_home'
    - platform: state
      entity_id: input_select.abodestatus
      to: 'armed_away'
  action:
    - service: notify.pushbullet
      data:
        message: "Garage Door Open"
        title: "Garage Door Open"
    - service: homeassistant.turn_on
      entity_id: script.notificationgaragedoor

- id: disarm_abode_at_night
  alias: 'Disarm Abode at night'
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: input_select.abodestatus
      state: 'armed_home'
    - condition: state
      entity_id: input_boolean.abodeupdate
      state: 'on'
  trigger:
   - platform: state
     entity_id:
       - device_tracker.meta_rashmi
       - device_tracker.meta_alok
     from: 'not_home'
     to: 'home'
  action:
    service: homeassistant.turn_on
    entity_id: script.abodestandby

- id: abode_home_from_standby
  alias: 'Abode Home from Standby'
  initial_state: 'on'
  condition:
    condition: and
    conditions:
     - condition: state
       entity_id: input_select.abodestatus
       state: 'disarmed'
     - condition: time
       after: '22:15:00'
       before: '07:00:00'
     - condition: state
       entity_id: input_boolean.abodeupdate
       state: 'on'
     - condition: template
       value_template: >
         {%- if states.input_select.abodestatus.last_changed -%}
           {{ (as_timestamp(now()) - as_timestamp(states.input_select.abodestatus.last_changed)) > 300 }}
         {%- else -%}
           true
         {%- endif -%}
  trigger:
    - platform: time_pattern
      minutes: '/10'
  action:
    - service: homeassistant.turn_on
      entity_id: script.abodehome

- id: abode_standby
  alias: 'Abode Standby'
  initial_state: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.household
        state: 'home'
      - condition: time
        after: '08:15:00'
        before: '21:45:00'
      - condition: state
        entity_id: input_boolean.abodeupdate
        state: 'on'
      - condition: template
        value_template: >
          {%- if states.input_select.abodestatus.last_changed -%}
            {{ (as_timestamp(now()) - as_timestamp(states.input_select.abodestatus.last_changed)) > 300 }}
          {%- else -%}
            true
          {%- endif -%}
      - condition: or
        conditions:
          - condition: state
            entity_id: input_select.abodestatus
            state: 'armed_home'
          - condition: state
            entity_id: input_select.abodestatus
            state: 'armed_away'
  trigger:
    - platform: time_pattern
      minutes: '/10'
  action:
    - service: homeassistant.turn_on
      entity_id: script.abodestandby

- id: abode_arm
  alias: 'Arm Abode'
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: input_boolean.abodeupdate
      state: 'on'
    - condition: template
      value_template: >
        {%- if states.automation.disarm_abode_from_away.attributes.last_triggered -%}
          {{ (as_timestamp(now()) - as_timestamp(states.automation.disarm_abode_from_away.attributes.last_triggered)) > 240 }}
        {%- else -%}
          true
        {%- endif -%}
    - condition: template
      value_template: "{{ states('input_select.abodestatus') != 'armed_away' }}"
  trigger:
    - platform: state
      entity_id: group.household
      from: 'home'
      to: 'not_home'
    - platform: state
      entity_id: group.household
      from: 'home'
      to: 'not_home'
      for: '00:10:00'
  action:
     service: homeassistant.turn_on
     entity_id: script.abodeaway

- id: abode_home_at_night
  alias: 'Abode Home at night'
  initial_state: 'on'
  condition:
    condition: and
    conditions:
     - condition: state
       entity_id: input_boolean.abodeupdate
       state: 'on'
     - condition: state
       entity_id: group.household
       state: 'home'
  trigger:
    platform: time
    at: '22:00:00'
  action:
    - service: homeassistant.turn_on
      entity_id: script.abodehome

- id: abode_disarm_morning
  alias: 'Disarm Abode in the morning'
  initial_state: 'on'
  condition:
    condition: and
    conditions:
     - condition: state
       entity_id: group.household
       state: 'home'
     - condition: state
       entity_id: input_boolean.abodeupdate
       state: 'on'
  trigger:
    - platform: time
      at: '07:20:00'
  action:
    - service: homeassistant.turn_on
      entity_id: script.abodestandby
    - service: automation.turn_on
      entity_id: automation.turn_off_master_lights
    - service: input_boolean.turn_off
      entity_id: input_boolean.sleeping
    - service: shell_command.delete_unifi

- id: enable_recording
  alias: Enable Recording
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.startrecording
    to: 'on'
  action:
    service: switch.turn_on
    entity_id: switch.foscam_record

- id: disable_recording
  alias: Disable Recording
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.startrecording
    to: 'off'
  action:
    service: switch.turn_off
    entity_id: switch.foscam_record

- id: disable_thermostat_away_mode
  alias: 'Disable thermostat away'
  initial_state: 'on'
  condition:
    - condition: template
      value_template: >
        {{states('input_select.abodestatus') == 'disarmed' and states('group.thermostats') == 'on'}}
  trigger:
    - platform: time_pattern
      minutes: '/5'
  action:
    - service: homeassistant.turn_off
      data_template:
        entity_id: >
          {%- if states('switch.downstairs_away') == 'on' -%}
            switch.downstairs_away
          {%- elif states('switch.upstairs_away') == 'on' -%}
            switch.upstairs_away
          {%- elif states('switch.bedroom_away') == 'on' -%}
            switch.bedroom_away
          {%- endif -%}

- id: enable_thermostat_away_mode
  alias: 'Enable thermostat away'
  initial_state: 'on'
  condition:
    - condition: template
      value_template: >
        {%- if state_attr("automation.enable_thermostat_away", "last_triggered") -%}
          {{ (as_timestamp(now()) - as_timestamp(state_attr("automation.enable_thermostat_away", "last_triggered"))) > 900 }}
        {%- else -%}
          true
        {%- endif -%}
    - condition: or
      conditions:
        - condition: template
          value_template: >
            {{states('input_select.abodestatus') == 'armed_away' and states('switch.downstairs_away') == 'off'}}
        - condition: template
          value_template: >
            {{states('input_select.abodestatus') == 'armed_away' and states('switch.upstairs_away') == 'off'}}
        - condition: template
          value_template: >
            {{states('input_select.abodestatus') == 'armed_away' and states('switch.bedroom_away') == 'off'}}
  trigger:
    - platform: time_pattern
      minutes: '/5'
    - platform: event
      event_type: resume_thermostat_schedule
  action:
    - service: homeassistant.turn_on
      data_template:
        entity_id: >
          {%- if states('switch.downstairs_away') == 'off' -%}
            switch.downstairs_away
          {%- elif states('switch.upstairs_away') == 'off' -%}
            switch.upstairs_away
          {%- elif states('switch.bedroom_away') == 'off' -%}
            switch.bedroom_away
          {%- endif -%}

- id: image_processing_scan
  alias: 'Image Processing Scan'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.backyard_field_detection
        - binary_sensor.driveway_field_detection
        - binary_sensor.patio_field_detection
        - binary_sensor.porch_field_detection
        - binary_sensor.backyard_line_crossing
        - binary_sensor.driveway_line_crossing
        - binary_sensor.patio_line_crossing
        - binary_sensor.porch_line_crossing
        - binary_sensor.ring_front_door_motion
  action:
    - service: image_processing.scan
      data_template:
        entity_id: >
          {% if trigger.entity_id == "binary_sensor.ring_front_door_motion" %}
            image_processing.tensorflow_porch
          {% else %}
            image_processing.tensorflow_{{ trigger.entity_id.split('.')[1].split('_')[0] }}
          {% endif %}
    # - service: image_processing.scan
    #   data_template:
    #     entity_id: >
    #       {% if trigger.entity_id == "binary_sensor.ring_front_door_motion" %}
    #         image_processing.deepstack_porch
    #       {% else %}
    #         image_processing.deepstack_{{ trigger.entity_id.split('.')[1].split('_')[0] }}
    #       {% endif %}
    # - service: image_processing.scan
    #   data_template:
    #     entity_id: "image_processing.opencv_{{ trigger.entity_id.split('.')[1].split('_')[0] }}"

# - id: opencv_image_processing_notification
#   alias: 'OpenCV image processing'
#   initial_state: 'on'
#   trigger:
#     - platform: state
#       entity_id:
#         - image_processing.opencv_porch
#         - image_processing.opencv_patio
#         - image_processing.opencv_driveway
#         - image_processing.opencv_backyard
#   condition:
#     - condition: template
#       value_template: '{{ trigger.to_state.state |int > 0 }}'
#   action:
#     - service: logbook.log
#       data_template:
#         name: "OpenCV: "
#         message: >-
#           {% for object in state_attr(trigger.entity_id,'matches').keys() -%}{%- if loop.first %}{% elif loop.last %}, {% else %}, {% endif -%}{{ object|title }}{%- endfor %} detected in {{ trigger.to_state.attributes.camera.split('.')[1] }}.

- id: tf_image_processing_notification
  alias: 'TF image processing'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - image_processing.tensorflow_porch
        - image_processing.tensorflow_patio
        - image_processing.tensorflow_driveway
        - image_processing.tensorflow_backyard
        - image_processing.deepstack_porch
        - image_processing.deepstack_patio
        - image_processing.deepstack_driveway
        - image_processing.deepstack_backyard
  condition:
    - condition: template
      value_template: '{{ trigger.to_state.state |int > 0 }}'
    # - condition: template
    #   value_template: >
    #       {% set camera = trigger.entity_id.split('.')[1].split('_')[1] %}
    #       {%- set tags = trigger.to_state.attributes.matches.keys()|list -%}
    #
    #       {% macro get_list(obj) %}
    #         {%- for x in trigger.to_state.attributes.matches[obj]|list if x.box[0] > 0.25 -%}
    #           {%- if loop.first %}{% elif loop.last %},{% else %},{% endif -%}{{ obj }}
    #         {%- endfor -%}
    #       {% endmacro %}
    #
    #       {% macro run() %}
    #         {%- for object in tags -%}
    #         {%- if loop.first %}{% elif loop.last %}, {% else %}, {% endif -%}{{ obj }}
    #           {{- get_list(object).split(',')|list|unique|list|join|title }}
    #         {%- endfor -%}
    #       {% endmacro %}
    #
    #       {% set output = run() %}
    #       {{ output == '' }}
  action:
    - service: logbook.log
      data_template:
        name: "TF: "
        message: >-
          {% for object in state_attr(trigger.entity_id,'matches').keys() -%}{%- if loop.first %}{% elif loop.last %}, {% else %}, {% endif -%}{{ object|title }}{%- endfor %} detected in {{ trigger.entity_id.split('.')[1].split('_')[1] }}.

- id: notify_camera_pictures
  alias: 'Notify camera pictures'
  initial_state: 'off'
  condition:
    - condition: state
      entity_id: input_select.abodestatus
      state: 'armed_away'
    - condition: template
      value_template: >
        {%- if states.automation.notify_camera_pictures.attributes.last_triggered -%}
          {{ (as_timestamp(now()) - as_timestamp(states.automation.notify_camera_pictures.attributes.last_triggered)) > 300 }}
        {%- else -%}
          true
        {%- endif -%}
    - condition: template
      value_template: >
        {%- if trigger.entity_id == "binary_sensor.backyard_field_detection" or trigger.entity_id == "binary_sensor.backyard_line_crossing" -%}
        {{((as_timestamp(now()) - as_timestamp(states.binary_sensor.backyard_motion.attributes.last_tripped_time)))|round|abs < 30}}
        {%- elif trigger.entity_id == "binary_sensor.driveway_field_detection" or trigger.entity_id == "binary_sensor.driveway_line_crossing" -%}
        {{((as_timestamp(now()) - as_timestamp(states.binary_sensor.driveway_motion.attributes.last_tripped_time)))|round|abs < 30}}
        {%- elif trigger.entity_id == "binary_sensor.patio_field_detection" or trigger.entity_id == "binary_sensor.patio_line_crossing" -%}
        {{((as_timestamp(now()) - as_timestamp(states.binary_sensor.patio_motion.attributes.last_tripped_time)))|round|abs < 30}}
        {%- elif trigger.entity_id == "binary_sensor.porch_field_detection" or trigger.entity_id == "binary_sensor.porch_line_crossing" -%}
        {{((as_timestamp(now()) - as_timestamp(states.binary_sensor.porch_motion.attributes.last_tripped_time)))|round|abs < 30}}
        {%- else -%}
          true
        {%- endif -%}
  trigger:
   - platform: state
     entity_id:
       - binary_sensor.backyard_field_detection
       - binary_sensor.driveway_field_detection
       - binary_sensor.patio_field_detection
       - binary_sensor.porch_field_detection
       - binary_sensor.backyard_line_crossing
       - binary_sensor.driveway_line_crossing
       - binary_sensor.patio_line_crossing
       - binary_sensor.porch_line_crossing
     from: 'off'
     to: 'on'
  action:
    - service: notify.ios
      data_template:
        message: "Check {{ trigger.entity_id.split('.')[1].split('_')[0] }} camera."
        data:
          push:
            category: camera
          entity_id: "camera.{{ trigger.entity_id.split('.')[1].split('_')[0] }}"
          attachment:
            url: "{{ states.camera[trigger.entity_id.split('.')[1].split('_')[0]].attributes.entity_picture }}"
            content-type: jpg
    # - service: shell_command.image_classify
    #   data_template:
    #     camera: "{{ trigger.entity_id.split('.')[1].split('_')[0] }}"
    # - service: shell_command.facebox
    #   data_template:
    #     camera: "{{ trigger.entity_id.split('.')[1].split('_')[0] }}"
    # - service: camera.snapshot
    #   data_template:
    #     entity_id: "camera.{{ trigger.entity_id.split('.')[1].split('_')[0] }}"
    #     filename: '/home/homeassistant/.homeassistant/downloads/camera/{{ trigger.entity_id.split(".")[1].split("_")[0] }}_{{ now().strftime("%d%h%Y_%H%M%S") }}.jpg'
    - service: logbook.log
      data_template:
        name: "Camera activity: "
        message: >-
          {%- for state in states if state.entity_id == trigger.entity_id -%}
            {{ state.attributes.friendly_name }} activated at {{ as_timestamp(now()) | timestamp_custom('%I:%M:%S %p', true) }}.
          {%- endfor -%}
    - service: logbook.log
      data_template:
        name: "Motion detected: "
        message: >-
          {%- if trigger.entity_id == "binary_sensor.backyard_field_detection" or trigger.entity_id == "binary_sensor.backyard_line_crossing" -%}
            {{(as_timestamp(now()) - as_timestamp(states.binary_sensor.backyard_motion.attributes.last_tripped_time))|round(2)}} seconds ago.
          {%- elif trigger.entity_id == "binary_sensor.driveway_field_detection" or trigger.entity_id == "binary_sensor.driveway_line_crossing" -%}
            {{(as_timestamp(now()) - as_timestamp(states.binary_sensor.driveway_motion.attributes.last_tripped_time))|round(2)}} seconds ago.
          {%- elif trigger.entity_id == "binary_sensor.patio_field_detection" or trigger.entity_id == "binary_sensor.patio_line_crossing" -%}
            {{(as_timestamp(now()) - as_timestamp(states.binary_sensor.patio_motion.attributes.last_tripped_time))|round(2)}} seconds ago.
          {%- elif trigger.entity_id == "binary_sensor.porch_field_detection" or trigger.entity_id == "binary_sensor.porch_line_crossing" -%}
            {{(as_timestamp(now()) - as_timestamp(states.binary_sensor.porch_motion.attributes.last_tripped_time))|round(2)}} seconds ago.
          {%- endif -%}

- id: notify_tensorflow_bus
  alias: 'Notify Tensorflow bus'
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: input_select.abodestatus
      state: 'disarmed'
    - condition: state
      entity_id: calendar.us_holidays
      state: 'off'
    - condition: or
      conditions:
        - condition: time
          after: '07:45:00'
          before: '08:45:00'
        - condition: time
          after: '15:20:00'
          before: '16:30:00'
  trigger:
    - platform: template
      value_template: >
        {{ 'bus' in state_attr('image_processing.tensorflow_driveway','matches') }}
  action:
    - service: script.sonos_say
      data:
        sonos_entity: media_player.family_room_2
        volume: 0.4
        delay: '00:00:03'
        message: 'Bus is detected in Driveway'

- id: notify_tensorflow_detection
  alias: 'Notify Tensorflow detection'
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: input_select.abodestatus
      state: 'armed_away'
    - condition: template
      value_template: '{{ trigger.to_state.state |int > 0 }}'
    - condition: template
      value_template: >
        {%- if states.automation.notify_tensorflow_detection.attributes.last_triggered -%}
          {{ (as_timestamp(now()) - as_timestamp(state_attr('automation.notify_tensorflow_detection','last_triggered'))) > 30 }}
        {%- else -%}
          true
        {%- endif -%}
  trigger:
   - platform: state
     entity_id:
       - image_processing.tensorflow_porch
       - image_processing.tensorflow_patio
       - image_processing.tensorflow_driveway
       - image_processing.tensorflow_backyard
  action:
    - service: notify.mobile_app_alok_s_iphone
      data_template:
        message: >
          {{ state_attr(trigger.entity_id,'matches').keys()|list|unique|list|join(', ')|title }} detected in {{ trigger.entity_id.split('.')[1].split('_')[1] }} camera.
        data:
          push:
            category: camera
          entity_id: "camera.{{ trigger.entity_id.split('.')[1].split('_')[1] }}"
          attachment:
            url: "{{ states.camera[trigger.entity_id.split('.')[1].split('_')[1]].attributes.entity_picture }}"
            content-type: jpg

- id: save_camera_images
  alias: 'Camera - Save images on motion'
  initial_state: 'off'
  trigger:
   - platform: state
     entity_id:
       - binary_sensor.backyard_motion
       - binary_sensor.backyard_field_detection
       - binary_sensor.backyard_line_crossing
       - binary_sensor.driveway_motion
       - binary_sensor.driveway_field_detection
       - binary_sensor.driveway_line_crossing
       - binary_sensor.patio_motion
       - binary_sensor.patio_field_detection
       - binary_sensor.patio_line_crossing
       - binary_sensor.porch_field_detection
       - binary_sensor.porch_line_crossing
       - binary_sensor.porch_motion
     from: 'off'
     to: 'on'
  action:
    - service: camera.snapshot
      data_template:
        entity_id: "camera.{{ trigger.entity_id.split('.')[1].split('_')[0] }}"
        filename: '/home/homeassistant/.homeassistant/downloads/camera/{{ trigger.entity_id.split(".")[1].split("_")[0] }}/{{ trigger.entity_id.split(".")[1].split("_")[0] }}_{{ now().strftime("%d%h%Y_%H%M%S") }}.jpg'

- alias: 'Trigger alarm while armed away'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_sensor_158d00016612af
      to: 'on'
    - platform: state
      entity_id: binary_sensor.motion_sensor_158d00016c53bf
      to: 'on'
    - platform: state
      entity_id: binary_sensor.motion_sensor_158d00016daecc
      to: 'on'
    - platform: state
      entity_id: binary_sensor.motion_sensor_158d0001a1f2ab
      to: 'on'
  condition:
    - condition: state
      entity_id: alarm_control_panel.hass_alarm
      state: 'armed_away'
  action:
    - service: alarm_control_panel.alarm_trigger
      entity_id: alarm_control_panel.hass_alarm


#################################################################
## HASS Related
#################################################################

- id: battery_alert
  alias: 'Battery Alert'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.battery_status
  condition:
    - condition: template
      value_template: >
        {{ trigger.to_state.state | length > 0 }}
  action:
    - service: persistent_notification.create
      data_template:
        title: Low Battery levels
        notification_id: low-battery-alert
        message: >
          Check battery: {{ states('sensor.battery_status') }}
    - service: notify.pushbullet
      data_template:
        title: "Battery status"
        message: >
          Check battery: {{ states('sensor.battery_status') }}

- id: heal_zwave_network
  alias: Heal Z-Wave Network
  initial_state: 'on'
  trigger:
    platform: time
    at: '2:31:00'
  action:
    service: zwave.heal_network

# {{state_attr('zwave.garage_door_tilt_sensor','query_stage')=='CacheLoad'}}
# - id: z-wave_cacheload
#   alias: Repair Z-Wave Network
#   initial_state: 'on'
#   trigger:
#     - platform: state
#       entity_id: zwave.garage_door_tilt_sensor
#       to: 'initializing'
#     - platform: state
#       entity_id: zwave.garage_relay
#       to: 'initializing'
#   action:
#     service: zwave.test_network

- id: update_available_notification
  alias: "Update Available Notification"
  initial_state: 'on'
  trigger:
    platform: template
    value_template: "{{states('sensor.pypi_hass_version') == states('sensor.current_version') }}"
  action:
    - service: notify.pushbullet
      data:
        message: "HomeAssistant {{ states('sensor.pypi_hass_version') }} is now available"
        title: "Update HASS"
    - service: persistent_notification.create
      data:
        title: "Update Available"
        message: >
          Home Assistant {{ states('sensor.pypi_hass_version') }} is available, please update.
        notification_id: "update_available"

- id: change_current_theme
  alias: 'Change Current Theme'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_select.current_theme
  action:
    - service: frontend.set_theme
      data_template:
        name: "{{states('input_select.current_theme')}}"

#################################################################
## Commute Times
#################################################################

- id: update_morning_commute_sensor
  alias: "Commute - Update morning commute sensor"
  initial_state: 'on'
  trigger:
    - platform: time_pattern
      minutes: '/2'
  condition:
    - condition: time
      after: '08:00:00'
      before: '11:00:00'
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
    - condition: state
      entity_id: device_tracker.meta_alok
      state: 'home'
  action:
    - service: homeassistant.update_entity
      data:
        entity_id: sensor.morning_commute

- id: update_evening_commute_sensor
  alias: "Commute - Update evening commute sensor"
  initial_state: 'on'
  trigger:
    - platform: time_pattern
      minutes: '/2'
  condition:
    - condition: time
      after: '17:00:00'
      before: '20:00:00'
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
    - condition: template
      value_template: >
        {%- if states('device_tracker.meta_alok') -%}
          {{ states('device_tracker.meta_alok')|lower in ('buckhead', 'downtown') }}
        {%- else -%}
          false
        {%- endif -%}
  action:
    - service: homeassistant.update_entity
      data:
        entity_id: sensor.alok_to_home

- id: morning_commute
  alias: "Morning Commute"
  initial_state: 'on'
  condition:
    condition: and
    conditions:
     - condition: time
       after: '08:15:00'
       before: '11:00:00'
     - condition: time
       weekday:
         - mon
         - tue
         - wed
         - thu
         - fri
     - condition: state
       entity_id: device_tracker.meta_alok
       state: 'home'
  trigger:
    platform: numeric_state
    entity_id: sensor.morning_commute
    below: 43
  action:
    - service: notify.pushbullet
      data:
        message: Commute time is 43 minutes
        title: Leave for Work
        target: device/myiPhone
    - service: homeassistant.turn_on
      entity_id: script.notificationleavework

- id: evening_commute
  alias: "Evening Commute"
  initial_state: 'on'
  condition:
    condition: and
    conditions:
     - condition: time
       after: '17:00:00'
       before: '20:00:00'
     - condition: time
       weekday:
         - mon
         - tue
         - wed
         - thu
         - fri
     - condition: template
       value_template: >
         {%- if states('device_tracker.meta_alok') -%}
           {{ states('device_tracker.meta_alok') != 'home' }}
         {%- else -%}
           false
         {%- endif -%}
  trigger:
    platform: template
    value_template: >
      {%- if states.sensor.alok_to_home.attributes.duration_in_traffic -%}
        {{(states.sensor.alok_to_home.attributes.duration_in_traffic.split(' ')[0]|int) / (states.sensor.alok_to_home.attributes.duration.split(' ')[0]|int) < 1.25}}
      {%- else -%}
        false
      {%- endif -%}
  action:
    service: notify.pushbullet
    data_template:
      message: Commute time is {{states.sensor.alok_to_home.attributes.duration_in_traffic.split(' ')[0]|int}} minutes
      title: Leave for Home
      target: device/myiPhone

- id: plexspy_notification
  alias: "Plex Spy notification"
  initial_state: 'off'
  trigger:
    platform: state
    entity_id: sensor.plex
  action:
    - service: notify.pushbullet
      data_template:
        message: >
          {%- if states.sensor.plex.attributes -%}
            {% set space = joiner(' ') %}
            {%- for attr in states.sensor.plex.attributes -%}
             {%- if not attr=="friendly_name" and not attr=="unit_of_measurement" and not attr=="homebridge_hidden" and not attr=="icon"-%}
              {{space()}}{{attr}} is watching {{states.sensor.plex.attributes[attr]}}.
             {%- endif -%}
            {%- endfor -%}
          {%- endif -%}
        title: "Plex {{ trigger.to_state.state }} people streaming. "
        target: device/myiPhone
    - service: logbook.log
      data_template:
        name: "Plex {{ trigger.to_state.state }} people streaming. "
        message: >
          {%- if states.sensor.plex.attributes -%}
            {% set space = joiner(' ') %}
            {%- for attr in states.sensor.plex.attributes -%}
             {%- if not attr=="friendly_name" and not attr=="unit_of_measurement" and not attr=="homebridge_hidden" and not attr=="icon"-%}
              {{space()}}{{attr}} is watching {{states.sensor.plex.attributes[attr]}}.
             {%- endif -%}
            {%- endfor -%}
          {%- endif -%}

#################################################################
## Home Automation Related
#################################################################

- id: xiaomi_vibration_sensor_test
  alias: Xiaomi Vibration sensor test
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: xiaomi_aqara.movement
      event_data:
        entity_id: binary_sensor.vibration_158d0002a51fc2
  action:
    - service: logbook.log
      data_template:
        name: "Xiaomi event: "
        message: >
          {{trigger.event.data}}

- id: micube_test
  alias: MiCube event test
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: xiaomi_aqara.cube_action
      event_data:
        entity_id: binary_sensor.cube_158d0001035aa7
  action:
    - service: logbook.log
      data_template:
        name: "MiCube event: "
        message: >
          {%- if trigger.event.data.action_value -%}
            {{trigger.event.data.action_type}} and {{trigger.event.data.action_value}}
          {%- else -%}
            {{trigger.event.data.action_type}}
          {%- endif -%}

- id: micube_brightness_rotate
  alias: "MiCube rotate - Master lights"
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: light.master_lights
      state: 'on'
  trigger:
    platform: event
    event_type: xiaomi_aqara.cube_action
    event_data:
      entity_id: binary_sensor.cube_158d0001035aa7
      action_type: rotate
  action:
    - service: light.turn_on
      data_template:
        entity_id: light.master_lights
        brightness: >
              {% set state = (state_attr('light.master_lights','brightness') + trigger.event.data.action_value|int) -%}
              {%-  if state > 255 -%}
                 {%- set state  = 255 -%}
              {%-  elif state < 0 -%}
                 {%- set state  = 0 -%}
              {%- endif %}
              {{ state }}
    - service: input_boolean.turn_on
      entity_id: input_boolean.sleeping

- id: micube_scenes_reset
  alias: "MiCube scene reset"
  initial_state: on
  condition:
    - condition: state
      entity_id: light.master_lights
      state: 'on'
  trigger:
    platform: event
    event_type: xiaomi_aqara.cube_action
    event_data:
      entity_id: binary_sensor.cube_158d0001035aa7
      action_type: tap_twice
  action:
    service: script.set_hue_scene
    data_template:
      group: "Master"
      scene: "Bright"

- id: micube_master_scenes
  alias: "MiCube Master scene"
  initial_state: on
  condition:
    - condition: state
      entity_id: light.master_lights
      state: 'on'
  trigger:
    - platform: event
      event_type: xiaomi_aqara.cube_action
      event_data:
        entity_id: binary_sensor.cube_158d0001035aa7
        action_type: flip90
  action:
    - service: script.set_hue_scene
      data_template:
        group: "Master"
        scene: >
          {{ ['Arctic aurora', 'Galaxy', 'Starlight', 'Nightlight', 'Savanna sunset', 'Spring blossom', 'Tropical twilight'] | random  }}
    - service: automation.turn_off
      entity_id: automation.turn_off_master_lights

- id: micube_toggle_master
  alias: "MiCube Toggle Master"
  initial_state: on
  trigger:
    platform: event
    event_type: xiaomi_aqara.cube_action
    event_data:
      entity_id: binary_sensor.cube_158d0001035aa7
      action_type: flip180
  action:
    - service: light.toggle
      data:
        entity_id: light.master_lights

- id: turn_off_master_lights_at_night
  alias: "Turn off Master lights if they randomly turn on at night"
  initial_state: off
  trigger:
    - platform: state
      entity_id:
        - light.hue_color_lamp_1
        - light.hue_color_lamp_2
        - light.hue_color_lamp_3
      to: 'on'
  condition:
    - condition: state
      entity_id: input_select.abodestatus
      state: 'armed_home'
    - condition: time
      after: '22:30:00'
      before: '05:00:00'
  action:
    - service: light.turn_off
      data_template:
        entity_id: '{{trigger.entity_id}}'

- id: prevent_overcharging
  alias: 'Prevent overcharging'
  initial_state: 'on'
  trigger:
    - platform: numeric_state
      entity_id: sensor.wemopowerused
      below: 2
      for: '00:05:00'
  condition:
    - condition: state
      entity_id: switch.wemoinsight
      state: 'on'
  action:
     service: switch.turn_off
     data:
       entity_id: switch.wemoinsight

- id: hvac_set_prev_efficiency
  alias: 'HVAC set previous efficiency'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - sensor.master_temp_change
        - sensor.upstairs_temp_change
        - sensor.downstairs_temp_change
      to: '-999'
  action:
    - service: input_number.set_value
      data_template:
        entity_id: >
          {%- if trigger.entity_id == 'sensor.master_temp_change' -%}
            input_number.master_prev_eff
          {%- elif trigger.entity_id == 'sensor.upstairs_temp_change' -%}
            input_number.upstairs_prev_eff
          {%- elif trigger.entity_id == 'sensor.downstairs_temp_change' -%}
            input_number.downstairs_prev_eff
          {%- endif -%}
        value: >
          {{ trigger.from_state.state|float }}


- id: hvac_set_prev_temp
  alias: 'HVAC set previous temperature'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - sensor.masterthermoper
        - sensor.upstairsthermoper
        - sensor.downstairsthermoper
      to: 'cooling'
    - platform: state
      entity_id:
        - sensor.masterthermoper
        - sensor.upstairsthermoper
        - sensor.downstairsthermoper
      to: 'heating'
  action:
    - service: input_datetime.set_datetime
      data_template:
        entity_id: >
          {%- if trigger.entity_id == 'sensor.masterthermoper' -%}
            input_datetime.master_time
          {%- elif trigger.entity_id == 'sensor.upstairsthermoper' -%}
            input_datetime.upstairs_time
          {%- elif trigger.entity_id == 'sensor.downstairsthermoper' -%}
            input_datetime.downstairs_time
          {%- endif -%}
        datetime: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"
    - service: input_number.set_value
      data_template:
        entity_id: >
          {%- if trigger.entity_id == 'sensor.masterthermoper' -%}
            input_number.master_prev_temp
          {%- elif trigger.entity_id == 'sensor.upstairsthermoper' -%}
            input_number.upstairs_prev_temp
          {%- elif trigger.entity_id == 'sensor.downstairsthermoper' -%}
            input_number.downstairs_prev_temp
          {%- endif -%}
        value: >
          {%- if trigger.entity_id == 'sensor.masterthermoper' -%}
            {{state_attr("climate.bedroom","current_temperature")|float}}
          {%- elif trigger.entity_id == 'sensor.upstairsthermoper' -%}
            {{state_attr("climate.upstairs","current_temperature")|float}}
          {%- elif trigger.entity_id == 'sensor.downstairsthermoper' -%}
            {{state_attr("climate.downstairs","current_temperature")|float}}
          {%- endif -%}
- id: prevent_master_hvac_failure
  alias: 'Prevent master hvac failure'
  initial_state: 'on'
  trigger:
    - platform: numeric_state
      entity_id:
        - sensor.downstairs_temp_change
        - sensor.master_temp_change
        - sensor.upstairs_temp_change
      above: 20
      for: '00:05:00'
  action:
    - service: notify.mobile_app_alok_s_iphone
      data_template:
        message: >
          Check {{ trigger.entity_id.split('.')[1].split('_')[0] }} thermostat
        data:
          subtitle: "{{ trigger.entity_id.split('.')[1].split('_')[0] }} ran for over 20 minutes without any temperature change"
          push:
            badge: 0

- id: ensure_smart_devices_on
  alias: 'Ensure smart-devices are on'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - light.living_room_lights
        - light.lifx5
        - light.master_lights
      to: 'unavailable'
      for: '00:05:00'
    - platform: state
      entity_id:
        - cover.garagedoor
      to: 'open'
      for: '00:15:00'
  action:
    - service: notify.ios
      data_template:
        message: "Check {{ trigger.to_state.name }}"
        data:
          subtitle: "Looks like {{ trigger.to_state.name }} is {{ trigger.to_state.state }}"
          push:
            badge: 0

- id: master_lights_on
  alias: 'Turn on Master lights on motion'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_sensor_158d00016c53bf
      from: 'off'
      to: 'on'
  condition:
    condition: or
    conditions:
      - condition: and
        conditions:
          - condition: time
            after: '17:00:00'
            before: '22:30:00'
          - condition: state
            entity_id: light.master_lights
            state: 'off'
          - condition: numeric_state
            entity_id: sensor.illumination_158d00016c53bf
            below: 20
          - condition: state
            entity_id: input_boolean.sleeping
            state: 'off'
      - condition: and
        conditions:
          - condition: time
            after: '22:30:00'
            before: '07:00:00'
          - condition: state
            entity_id: light.master_lights
            state: 'off'
          - condition: state
            entity_id: input_select.abodestatus
            state: 'disarmed'
          - condition: state
            entity_id: input_boolean.sleeping
            state: 'off'
      - condition: and
        conditions:
          - condition: time
            after: '22:30:00'
            before: '07:00:00'
          - condition: state
            entity_id: light.master_lights
            state: 'off'
          - condition: template
            value_template: >
              {%- if states.automation.disarm_abode_from_away.attributes.last_triggered -%}
                {{ (as_timestamp(now()) - as_timestamp(states.automation.disarm_abode_from_away.attributes.last_triggered)) < 500 }}
              {%- else -%}
                false
              {%- endif -%}
          - condition: state
            entity_id: input_boolean.sleeping
            state: 'off'
  action:
    - service: light.turn_on
      data:
        entity_id: light.master_lights
        brightness: 255
    - delay: '00:00:05'
    - service: script.set_hue_scene
      data_template:
        group: "Master"
        scene: "Default"

- id: master_lights_off
  alias: 'Turn off Master lights'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_sensor_158d00016c53bf
      to: 'off'
      for: '00:03:00'
  condition:
    - condition: time
      after: '17:00:00'
      before: '22:00:00'
    - condition: state
      entity_id: light.master_lights
      state: 'on'
    - condition: state
      entity_id: input_boolean.sleeping
      state: 'off'
  action:
    - service: light.turn_off
      data:
        entity_id: light.master_lights

- id: garage_lights_on
  alias: 'Turn on garage lights when door opened'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.door_window_sensor_158d0001bf26df
      from: 'off'
      to: 'on'
  condition:
    - condition: or
      conditions:
       - condition: state
         entity_id: cover.garagedoor
         state: 'closed'
       - condition: state
         entity_id: sun.sun
         state: 'below_horizon'
  action:
     service: light.turn_on
     data:
       entity_id: light.lifx5
       brightness: 255

- id: garage_lights_off
  alias: 'Turn off garage lights'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.door_window_sensor_158d0001bf26df
      to: 'off'
      for: '00:00:30'
    - platform: state
      entity_id: light.lifx5
      to: 'on'
      for: '00:05:00'
  condition:
    - condition: state
      entity_id: light.lifx5
      state: 'on'
  action:
     service: light.turn_off
     entity_id: light.lifx5

- id: kitchen_light_brightness
  alias: 'Kitchen light brightness'
  initial_state: 'on'
  trigger:
   - platform: state
     entity_id: light.kitchen_light
     from: 'off'
     to: 'on'
  condition:
    - condition: template
      value_template: '{{ trigger.from_state.state == "off" }}'
  action:
     service: light.turn_on
     data:
       entity_id: light.kitchen_light
       brightness: 200

- id: turn_off_xiaomi
  alias: 'Turn off Xiaomi Gateway light'
  initial_state: 'on'
  trigger:
   - platform: numeric_state
     entity_id: sensor.illumination_34ce00813670
     above: 600
  condition:
    - condition: state
      entity_id: light.gateway_light_34ce00813670
      state: 'on'
  action:
    - service: light.turn_off
      entity_id: light.gateway_light_34ce00813670

- id: change_xiaomi_color
  alias: 'Change Xiaomi color'
  initial_state: 'on'
  condition:
    - condition: time
      after: '19:15:00'
      before: '07:45:00'
    - condition: state
      entity_id: binary_sensor.living_room_occupancy
      state: 'on'
  trigger:
   - platform: time_pattern
     minutes: '/15'
  action:
     service: light.turn_on
     entity_id: light.gateway_light_34ce00813670
     data_template:
       brightness: 255
       rgb_color: ['{{ (range(0, 255)|random) }}','{{ (range(0, 255)|random) }}','{{ (range(0, 255)|random) }}']

- id: change_leeo_color
  alias: 'Change Leeo color'
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: device_tracker.leeoalert
      state: 'home'
    - condition: time
      after: '19:15:00'
      before: '07:45:00'
    - condition: state
      entity_id: binary_sensor.living_room_occupancy
      state: 'on'
  trigger:
   - platform: time_pattern
     minutes: '/15'
  action:
     service: ifttt.trigger
     data_template: {"event":"leeocolor", "value1":"{{ '{:02x}{:02x}{:02x}'.format(range(0, 255) | random, range(0, 255) | random, range(0, 255) | random) }}"}

- id: change_leeoup_color
  alias: 'Change Leeo upstairs color'
  initial_state: 'on'
  condition:
    - condition: time
      after: '19:15:00'
      before: '07:45:00'
  trigger:
   - platform: time_pattern
     minutes: '/15'
  action:
     service: ifttt.trigger
     data_template: {"event":"leeocolorup", "value1":"{{ '{:02x}{:02x}{:02x}'.format(range(0, 255) | random, range(0, 255) | random, range(0, 255) | random) }}"}

- id: frontyard_lights
  alias: 'Frontyard lights on Motion'
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: sun.sun
      state: 'below_horizon'
    - condition: time
      after: '19:00:00'
      before: '05:00:00'
  trigger:
   - platform: state
     entity_id:
       - binary_sensor.ring_front_door_motion
     from: 'off'
     to: 'on'
  action:
    - service: switch.turn_on
      entity_id:
        - switch.driveway
        - switch.wemoporch
    - delay: '00:05:00'
    - service: switch.turn_off
      entity_id:
        - switch.driveway
        - switch.wemoporch

- id: lifx_effects
  alias: "Lifx Effects"
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_boolean.lifxeffects
  action:
    - service: homeassistant.turn_on
      data_template:
        entity_id: >
          {%- if trigger.to_state.state == 'on' -%}
            script.colorloop_start
          {%- else -%}
            script.lifx_stop_effects
          {%- endif -%}

- id: lifx_effects_update
  alias: "Lifx Effects Update"
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - input_number.lifxspread
        - input_number.lifxchange
        - input_number.lifxtransition
        - input_number.lifxbrightness
  action:
    - service: script.lifxeffects
      data_template:
        lifxbrightness: '{{states("input_number.lifxbrightness")|int}}'
        lifxtransition: '{{states("input_number.lifxtransition")|int}}'
        lifxspread: '{{states("input_number.lifxspread")|int}}'
        lifxchange: '{{states("input_number.lifxchange")|int}}'

- id: outdoor_light_at_night
  alias: Outdoor lights at night
  initial_state: 'on'
  trigger:
    platform: sun
    event: sunset
    offset: "00:45:00"
  action:
    - service: switch.turn_on
      entity_id:
        - switch.driveway
    - delay: '00:45:00'
    - service: switch.turn_off
      entity_id:
        - switch.driveway

- id: driveway_light_off_during_the_day
  alias: Driveway light Off during the day
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: switch.driveway
    to: 'on'
  condition:
    - condition: state
      entity_id: sun.sun
      state: 'above_horizon'
  action:
    - service: switch.turn_off
      entity_id:
        - switch.driveway
        - switch.wemoporch

- id: reset_garage_relay
  alias: 'Reset Garage Relay'
  initial_state: 'on'
  trigger:
    - platform: time_pattern
      seconds: '/5'
  condition:
    - condition: state
      entity_id: switch.garage_relay_switch
      state: "on"
  action:
    - service: switch.turn_off
      entity_id: switch.garage_relay_switch

- id: open_garage_door_when_someone_home
  alias: 'Open Garage door when someone home'
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: binary_sensor.garagedoor
      state: 'off'
      for: '00:02:00'
    - condition: state
      entity_id: input_boolean.homeautomation
      state: 'on'
    - condition: template
      value_template: >
        {%- if states.automation.open_garage_door_when_someone_home.attributes.last_triggered -%}
          {{ (as_timestamp(now()) - as_timestamp(states.automation.open_garage_door_when_someone_home.attributes.last_triggered)) > 150 }}
        {%- else -%}
          true
        {%- endif -%}
    - condition: template
      value_template: >
        {%- if states.automation.update_ha_after_startup.attributes.last_triggered -%}
          {{ (as_timestamp(now()) - as_timestamp(states.automation.update_ha_after_startup.attributes.last_triggered)) > 120 }}
        {%- else -%}
          true
        {%- endif -%}
    - condition: template
      value_template: >
        {%- if states.automation.arm_abode.attributes.last_triggered -%}
          {{ (as_timestamp(now()) - as_timestamp(states.automation.arm_abode.attributes.last_triggered)) > 240 }}
        {%- else -%}
          true
        {%- endif -%}
  trigger:
    - platform: state
      entity_id:
        - device_tracker.meta_rashmi
        - device_tracker.meta_alok
      from: 'not_home'
      to: 'home'
  action:
    - service: switch.turn_on
      entity_id: switch.garage_relay_switch
    - service: logbook.log
      data_template:
        name: "Garage door opened for: "
        message: "{{trigger.to_state.name.split(' ')[0]}}"
- id: close_garage_door_when_abode_is_home_or_away
  alias: 'Close garage door when Abode is Home or Away'
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: binary_sensor.garagedoor
      state: 'on'
    - condition: template
      value_template: >
        {%- if states.automation.close_garage_door_when_abode_is_home_or_away.attributes.last_triggered  -%}
          {{(as_timestamp(now()) - as_timestamp(states.automation.close_garage_door_when_abode_is_home_or_away.attributes.last_triggered)) > 60}}
        {%- else -%}
          true
        {%- endif -%}
    - condition: or
      conditions:
       - condition: state
         entity_id: input_select.abodestatus
         state: 'armed_home'
       - condition: state
         entity_id: input_select.abodestatus
         state: 'armed_away'
  trigger:
    - platform: time_pattern
      minutes: '/5'
  action:
    - service: switch.turn_on
      entity_id: switch.garage_relay_switch

- id: sensors_changed_when_nobody_home
  alias: 'Sensors changed when nobody is home'
  initial_state: 'on'
  condition:
    condition: state
    entity_id: input_select.abodestatus
    state: 'armed_away'
    for:
      minutes: 10
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.garagedoor
        - binary_sensor.back_door
        - binary_sensor.garage_entry_door
        - binary_sensor.front_door
        - binary_sensor.motion_sensor_158d00016daecc
        - binary_sensor.motion_sensor_158d00016612af
        - binary_sensor.motion_sensor_158d0001a1f2ab
      from: 'off'
      to: 'on'
  action:
    - service: light.turn_on
      data:
        entity_id: group.all_lights
    - service: notify.pushbullet
      data_template:
        title: "Alarm!"
        message: "The {{ trigger.to_state.name }} was changed to {{ trigger.to_state.state }} while no one is home - {{ as_timestamp(now()) | timestamp_custom('%I:%M:%S %p %d-%b-%Y', true) }}"
    - service: homeassistant.turn_on
      entity_id: script.notificationalarm

- id: sound_abode_alarm_notification
  alias: 'Sound alarm using notifications'
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: SOUND_ALARM
  action:
    - service: light.turn_on
      data:
        entity_id: group.all_lights
    - service: homeassistant.turn_on
      entity_id: script.notificationalarm

- id: turn_on_abode_updates
  alias: 'Turn on Abode updates'
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: ENABLE_ABODE_UPDATES
  action:
    - service: homeassistant.turn_on
      entity_id: input_boolean.abodeupdate

- id: turn_on_home_automation
  alias: 'Turn on Home automation'
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: ENABLE_HOME_AUTOMATION
  action:
    - service: homeassistant.turn_on
      entity_id: input_boolean.homeautomation

- id: simulate_presence
  alias: Simulate Presence
  initial_state: 'off'
  condition:
    condition: state
    entity_id: input_select.abodestatus
    state: 'armed_away'
  trigger:
    platform: sun
    event: sunset
    offset: "00:30:00"
  action:
    - service: light.turn_on
      entity_id: light.living_room_lights
    - delay: '01:{{ range(1,15) | random | int }}:00'
    - service: light.turn_on
      entity_id: light.master_lights
    - delay: '00:{{ range(1,10) | random | int }}:00'
    - service: light.turn_off
      entity_id: light.living_room_lights
    - delay: '00:{{ range(20,55) | random | int }}:00'
    - service: light.turn_off
      entity_id: light.master_lights

## Humidifier
- id: turn_on_humidifier
  alias: Turn on humidifier
  initial_state: 'off'
  condition:
     - condition: time
       after: '08:15:00'
       before: '21:45:00'
     - condition: template
       value_template: '{{ states("sensor.humidity_158d0001ab3b2b") | int < 30 }}'
     - condition: state
       entity_id: switch.wemoswitch
       state: 'off'
  trigger:
   - platform: time_pattern
     minutes: '/10'
  action:
    service: homeassistant.turn_on
    entity_id: switch.wemoswitch

- id: turn_off_humidifier
  alias: Turn off humidifier
  initial_state: 'off'
  condition:
    - condition: state
      entity_id: switch.wemoswitch
      state: 'on'
  trigger:
    platform: template
    value_template: '{{ states("sensor.humidity_158d0001ab3b2b") | int >= 30 }}'
  action:
    service: homeassistant.turn_off
    entity_id: switch.wemoswitch

- id: turn_on_study_fan
  alias: Turn on study fan
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: switch.03783133807d3a7d0403
      state: 'off'
  trigger:
    - platform: numeric_state
      entity_id: sensor.rpi_cpu_temp
      above: 135
  action:
    service: homeassistant.turn_on
    entity_id: switch.03783133807d3a7d0403

- id: turn_off_study_fan
  alias: Turn off study fan
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: switch.03783133807d3a7d0403
      state: 'on'
  trigger:
    - platform: numeric_state
      entity_id: sensor.rpi_cpu_temp
      below: 125
  action:
    service: homeassistant.turn_off
    entity_id: switch.03783133807d3a7d0403

# - id: get_iphone_steps
#   alias: Get steps from iPhone
#   initial_state: 'on'
#   trigger:
#     - platform: time
#       minutes: 30
#       seconds: 00
#   action:
#     - service: mqtt.publish
#       data:
#         topic: "owntracks/pi/alokphone/cmd"
#         payload_template: '{"_type" : "cmd", "action": "reportSteps"}'
#         qos: 2
#     - service: mqtt.publish
#       data:
#         topic: "owntracks/pi/rashmiphone/cmd"
#         payload_template: '{"_type" : "cmd", "action": "reportSteps"}'
#         qos: 2


- id: update_sensors
  alias: Update Sensors
  initial_state: on
  trigger:
    platform: time_pattern
    hours: '/3'
  action:
      service: homeassistant.update_entity
      data:
        entity_id:
          - sensor.battery_status
          - sensor.emulated_hue_names
#################################################################
## Harmony Remote
#################################################################
- id: set_initial_values_on_harmony_start
  alias: "Set initial values on Harmony Start"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: remote.livingroom
    to: 'on'
  action:
    - service: homeassistant.turn_on
      entity_id: input_boolean.tv
    - service: input_select.select_option
      data_template:
        entity_id: input_select.livingroomharmony
        option: >
          {{ state_attr('remote.livingroom','current_activity') }}
    - service: input_number.set_value
      data_template:
        entity_id: input_number.harmonyvolume
        value: >
            {{ (state_attr('media_player.family_room_2', 'volume_level') * 100) | int }}
    - service: input_select.select_option
      data_template:
        entity_id: input_select.hdmiswitcher
        option: >
          {%- if state_attr('remote.livingroom','current_activity') == "Watch Apple TV" -%}
            AppleTV
          {%- elif state_attr('remote.livingroom','current_activity') == "Watch Fire TV" -%}
            FireTV
          {%- elif state_attr('remote.livingroom','current_activity') == "SATV" -%}
            Shield
          {%- endif -%}

- id: update_tv_status_in_ha
  alias: Update TV status in HA
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: media_player.living_room_tv
  action:
    - service_template: "homeassistant.turn_{{ 'on' if trigger.to_state.state == 'on' else 'off' }}"
      data:
        entity_id: input_boolean.tv
- id: turn_on_off_shield_with_tv
  alias: Turn Shield on/off with TV
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: media_player.living_room_tv
  action:
    - service: remote.send_command
      data_template:
        command: "{{ 'PowerOff' if trigger.to_state.state == 'off' else 'PowerOn' }}"
        device: 31747959
        entity_id: remote.livingroom

- id: keep_pihole_off_when_thop_running
  alias: Keep PiHole turned off when running Thop
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: switch.pihole
      to: 'on'
  condition:
    - condition: template
      value_template: "{{ state_attr('media_player.shieldtv', 'app_id') == 'livetvstream.thoptv.com.thoptv' or state_attr('media_player.ftv_master', 'app_id') == 'livetvstream.thoptv.com.thoptv' }}"
  action:
    - service: switch.turn_off
      entity_id:
        - switch.pihole
- id: turn_off_pihole_when_thop_running
  alias: Turn off PiHole when running Thop
  initial_state: 'on'
  trigger:
    - platform: template
      value_template: "{{ state_attr('media_player.shieldtv', 'app_id') == 'livetvstream.thoptv.com.thoptv' or state_attr('media_player.ftv_master', 'app_id') == 'livetvstream.thoptv.com.thoptv' }}"
  condition:
    - condition: state
      entity_id: switch.pihole
      state: 'off'
  action:
    - service: switch.turn_off
      entity_id:
        - switch.pihole

- id: no_tv_time
  alias: No TV time
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: media_player.living_room_tv
    from: 'off'
    to: 'on'
  condition:
    - condition: state
      entity_id: input_boolean.tvtime
      state: 'off'
  action:
    - service: remote.send_command
      data_template:
        command: PowerOff
        device: 56988979
        entity_id: remote.livingroom
    - service: media_player.turn_off
      entity_id:
        - media_player.living_room_tv

- id: turn_tv_on_off
  alias: Turn TV on/off
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.tv
  action:
    - service: remote.send_command
      data_template:
        command: Home
        device: 31747959
        entity_id: remote.livingroom
    - service: remote.send_command
      data_template:
        command: "{{ 'PowerOff' if trigger.to_state.state == 'off' else 'PowerOn' }}"
        device: 56988979
        entity_id: remote.livingroom
- id: set_volume
  alias: "Set Volume"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_number.harmonyvolume
  action:
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.family_room_2
        volume_level: >
          {{states('input_number.harmonyvolume') | int / 100}}

- id: start_harmony_activity_from_input_select
  alias: "Start Harmony activity from input_select"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.livingroomharmony
  action:
  - service: remote.turn_on
    data_template:
      entity_id: remote.livingroom
      activity: "{{trigger.to_state.state}}"

- id: update_ha_if_harmony_activity_changes
  alias: "Update HA if Harmony activity changes"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.living_room
  action:
    - service: input_select.select_option
      data_template:
        entity_id: input_select.livingroomharmony
        option: "{{trigger.to_state.state}}"
    - service: input_select.select_option
      data_template:
        entity_id: input_select.hdmiswitcher
        option: >
          {%- if trigger.to_state.state == "Watch Apple TV" -%}
            AppleTV
          {%- elif trigger.to_state.state == "Watch Fire TV" -%}
            FireTV
          {%- else -%}
            Shield
          {%- endif -%}

- id: update_ha_after_startup
  alias: Update HA after startup
  initial_state: 'on'
  trigger:
    platform: homeassistant
    event: start
  action:
    - delay: '00:00:01'
    - service: homeassistant.turn_on
      entity_id: script.initialize_hass

- id: change_hdmi_switcher
  alias: "Change HDMI Switcher"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.hdmiswitcher
  action:
  - service: remote.send_command
    data_template:
      command: >-
        {%- if trigger.to_state.state == "AppleTV" -%}
          Input1
        {%- elif trigger.to_state.state == "FireTV" -%}
          Input2
        {%- elif trigger.to_state.state == "Shield" -%}
          Input3
        {%- endif -%}
      device: 31766668
      entity_id: remote.livingroom
- id: change_hdmi_input
  alias: "Change HDMI Input"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.hdmiinput
  action:
  - service: remote.send_command
    data_template:
      command: >-
        {%- if trigger.to_state.state == "InputHdmi1" -%}
          InputHdmi1
        {%- elif trigger.to_state.state == "InputHdmi2" -%}
          InputHdmi2
        {%- elif trigger.to_state.state == "InputHDMI3" -%}
          InputHDMI3
        {%- elif trigger.to_state.state == "InputHdmi4" -%}
          InputHdmi4
        {%- endif -%}
      device: 56988979
      entity_id: remote.livingroom
- id: update_volume_slider
  alias: "Update Volume Slider"
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.sonos_volume
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.harmonyvolume
        value: '{{ trigger.to_state.state }}'
    - service: notify.shield
      data_template:
        title: "Home Assistant"
        message: >
            Volume changed to {{ trigger.to_state.state }}
- id: notify_sonos_audio_in
  alias: "Notify Sonos audio-in state"
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.sonos_stereo
      to: '2'
  condition:
    - condition: template
      value_template: "{{state_attr('media_player.family_room_2','source')=='TV'}}"
    - condition: state
      entity_id: media_player.family_room_2
      state: 'playing'
  action:
    service: notify.telegram
    data_template:
      message: Sonos audio-in is {{states('sensor.sonos_audio_in')}}
      title: Sonos in Stereo
- id: notify_ftv_master_on
  alias: "Notify when FTV master turned on"
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: media_player.ftv_master
      to: 'playing'
  action:
    service: notify.telegram
    data_template:
      message: FTV Master turned on
      title: Check FTV Master
- id: sonos_enable_speech_enhance_and_night_sound
  alias: "Sonos Enable speech enhance and night sound"
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.television
      from: 'off'
      to: 'on'
  condition:
    - condition: time
      after: '20:30:00'
      before: '23:00:00'
  action:
    - service: sonos.set_option
      data:
        entity_id: media_player.family_room_2
        night_sound: true
    - service: sonos.set_option
      data:
        entity_id: media_player.family_room_2
        speech_enhance: true
- id: sonos_disable_speech_enhance_and_night_sound
  alias: "Sonos Disable speech enhance and night sound"
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.television
      to: 'off'
  condition:
    - condition: time
      after: '20:30:00'
      before: '07:00:00'
  action:
    - service: sonos.set_option
      data:
        entity_id: media_player.family_room_2
        night_sound: false
    - service: sonos.set_option
      data:
        entity_id: media_player.family_room_2
        speech_enhance: false


- id: ifttt_test
  alias: IFTTT Test
  initial_state: 'on'
  trigger:
    platform: event
    event_type: ifttt_webhook_received
  action:
    - service: logbook.log
      data_template:
        name: "IFTTT event: "
        message: >
          {{trigger.event.data}}

- alias: 'Arlo snapshop'
  initial_state: True
  hide_entity: true
  trigger:
    platform: event
    event_type: xiaomi_aqara.movement
    event_data:
      entity_id: binary_sensor.vibration_158d0002a51fc2
      movement_type: vibrate
  action:
    - service: camera.aarlo_request_snapshot_to_file
      entity_id: camera.aarlo_livingroom2
      data_template:
        filename: '/home/homeassistant/.homeassistant/downloads/camera/arlo_{{ now().strftime("%d%h%Y_%H%M%S") }}.jpg'

- id: earnings_estimate_logging
  alias: 'Log Earnings Estimate changes'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - sensor.yahoo_cop
        - sensor.yahoo_wpc
        - sensor.yahoo_pm
        - sensor.yahoo_brk_b
        - sensor.yahoo_well
        - sensor.yahoo_irm
        - sensor.yahoo_doc
        - sensor.yahoo_cvs
  condition:
    - condition: template
      value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  action:
    - service: logbook.log
      data_template:
        name: "Yahoo Estimates: "
        message: "{{trigger.to_state.attributes.Ticker}} changed from {{trigger.from_state.state}} to {{trigger.to_state.state}}. {{ trigger.to_state.attributes.history[0].firm }} - {{ trigger.to_state.attributes.history[0].action|default('Initiated', true) }} to {{ trigger.to_state.attributes.history[0].toGrade }} on {{ trigger.to_state.attributes.history[0].epochGradeDate }}"
    - service: notify.telegram
      data_template:
        message: "{{trigger.to_state.attributes.Ticker}} changed from {{trigger.from_state.state}} to {{trigger.to_state.state}}. {{ trigger.to_state.attributes.history[0].firm }} - {{ trigger.to_state.attributes.history[0].action|default('Initiated', true) }} to {{ trigger.to_state.attributes.history[0].toGrade }} on {{ trigger.to_state.attributes.history[0].epochGradeDate }}"
        title: "{{trigger.to_state.attributes.Ticker}} updated"










###################################################################################################################################################









# https://github.com/Snipercaine/DrZzs-HA/blob/master/automations.yaml
########## Quick Music Buttons ##########
  - alias: Sunday Music
    trigger: 
      - platform: state
        entity_id: input_boolean.sunday_music
        to: "on"
    action:
      - service: media_player.select_source
        data:
          entity_id: media_player.volumio_volumiohomelocal
          source: Sunday
      - delay: 0:01
      - service: input_boolean.turn_off
        entity_id: input_boolean.sunday_music  
  - alias: Lindsay Music
    trigger: 
      - platform: state
        entity_id: input_boolean.lindsay_music
        to: "on"
    action:
      - service: media_player.select_source
        data:
          entity_id: media_player.volumio_volumiohomelocal
          source: Lindsay
      - delay: 0:01
      - service: input_boolean.turn_off
        entity_id: input_boolean.lindsay_music  
  - alias: Rock Music
    trigger: 
      - platform: state
        entity_id: input_boolean.rock_music
        to: "on"
    action:
      - service: media_player.select_source
        data:
          entity_id: media_player.volumio_volumiohomelocal
          source: Rock On
      - delay: 0:01
      - service: input_boolean.turn_off
        entity_id: input_boolean.rock_music       
  - alias: Country Music
    trigger: 
      - platform: state
        entity_id: input_boolean.country_music
        to: "on"
    action:
      - service: media_player.select_source
        data:
          entity_id: media_player.volumio_volumiohomelocal
          source: Country
      - delay: 0:01
      - service: input_boolean.turn_off
        entity_id: input_boolean.country_music
########## Boys Bathroom Lock ###########
  - alias: Boys Bathroom Lock on 
    trigger:
      - platform: state
        entity_id: binary_sensor.boys_toilet
        from: "off"
        to: "on"
    action:
      - service: switch.turn_on
        entity_id: switch.boys_bathroom_lock
  - alias: Boys Bathroom Lock off
    trigger:
      - platform: state
        entity_id: binary_sensor.boys_toilet
        to: "off"
    action:
      - service: switch.turn_off
        entity_id: switch.boys_bathroom_lock
  - alias: Boys Bathroom Lock off after 20
    trigger:
      - platform: state
        entity_id: binary_sensor.boys_toilet
        to: "on"
        for: 
          minutes: 20
    action:
      - service: switch.turn_off
        entity_id: switch.boys_bathroom_lock

########## Destinkinators ###########
  - alias: Boys Toilet Destinker
    trigger: 
      - platform: state
        entity_id: binary_sensor.boys_toilet
        to: "on"
    action:
      - service: switch.turn_on
        entity_id: switch.10024200b4e62d51cd4b
      - delay: 0:10
      - service: switch.turn_off
        entity_id: switch.10024200b4e62d51cd4b
  - alias: Main Toilet Destinker
    trigger: 
      - platform: state
        entity_id: binary_sensor.main_toilet
        to: "on"
    action:
      - service: switch.turn_on
        entity_id: switch.10024200b4e62d51d3d7
      - delay: 0:10
      - service: switch.turn_off
        entity_id: switch.10024200b4e62d51d3d7
  - alias: Master Toilet Destinker
    trigger: 
      - platform: state
        entity_id: binary_sensor.master_toilet
        to: "on"
    action:
      - service: switch.turn_on
        entity_id: switch.10024200b4e62d51d558
      - delay: 0:10
      - service: switch.turn_off
        entity_id: switch.10024200b4e62d51d558
########## Climate Control ###########
  - alias: Fan off after AC off
    trigger:
      - platform: state
        entity_id: switch.upstairs_ac
        to: "off"
    action:
      - delay: 0:20
      - service: switch.turn_off
        entity_id: switch.upstairs_fan
  - alias: Fan off after Heat off
    trigger:
      - platform: state
        entity_id: switch.upstairs_furnace
        to: "off"
    action:
      - delay: 0:20
      - service: switch.turn_off
        entity_id: switch.upstairs_fan
        
  - alias: No AC when the Heat is on
    trigger:
      - platform: state
        entity_id: switch.upstairs_ac
        to: "on"
    action:
      - service: switch.turn_off
        entity_id: switch.upstairs_furnace
      - service: switch.turn_on
        entity_id: switch.upstairs_fan

  - alias: No Heat when the AC is on
    trigger:
      - platform: state
        entity_id: switch.upstairs_furnace
        to: "on"
    action:
      - service: switch.turn_off
        entity_id: switch.upstairs_ac
      - service: switch.turn_on
        entity_id: switch.upstairs_fan

  - alias: Summer Night Temp adjustment
    trigger:
      - platform: time
        at: '22:30:00'
    condition:
      condition: or
      conditions:
        - condition: template
          value_template: '{{ now().month == 5 }}'
        - condition: template
          value_template: '{{ now().month == 6 }}'
        - condition: template
          value_template: '{{ now().month == 7 }}'
        - condition: template
          value_template: '{{ now().month == 8 }}'
        - condition: template
          value_template: '{{ now().month == 9 }}'
    action:
      - service: climate.set_temperature
        data:
          entity_id: climate.upstairs_ac, climate.main_floor_ac
          temperature: 76
          operation_mode: Cool

  - alias: Summer Daytime Temp adjustment
    trigger:
      - platform: time
        at: '09:00:00'
    condition:
      condition: or
      conditions:
        - condition: template
          value_template: '{{ now().month == 5 }}'
        - condition: template
          value_template: '{{ now().month == 6 }}'
        - condition: template
          value_template: '{{ now().month == 7 }}'
        - condition: template
          value_template: '{{ now().month == 8 }}'
        - condition: template
          value_template: '{{ now().month == 9 }}'
    action:
      - service: climate.set_temperature
        data:
          entity_id: climate.upstairs_ac, climate.main_floor_ac
          temperature: 72
          operation_mode: Cool

  - alias: No one home Away Mode On
    trigger:
      - platform: state
        entity_id: device_tracker.janis7, device_tracker.justin_iphone7
        to: 'not_home'
        for:
          hours: 24
    action: 
      - service: climate.set_away_mode
        data:
          entity_id: climate.upstairs_ac, climate.upstairs_furnace, climate.main_floor_ac, climate.main_floor_heat, climate.master_bedroom_heat, climate.kitchen_heat, climate.kids_bedroom_heat, climate.entryway_heat, climate.toy_room_heat, climate.guest_bedroom_heat, climate.theater_room_heat
          away_mode: 'on'


  # - alias: Winter Night Temp adjustment
  #   trigger:
  #     - platform: time
  #       at: '22:00:00'
  #   condition:
  #     condition: or
  #     conditions:
  #       - condition: template
  #         value_template: '{{ now().month == 10 }}'
  #       - condition: template
  #         value_template: '{{ now().month == 11 }}'
  #       - condition: template
  #         value_template: '{{ now().month == 12 }}'
  #       - condition: template
  #         value_template: '{{ now().month == 1 }}'
  #       - condition: template
  #         value_template: '{{ now().month == 2 }}'
  #       - condition: template
  #         value_template: '{{ now().month == 3 }}'
  #       - condition: template
  #         value_template: '{{ now().month == 4 }}'
  #   action:
  #     - service: climate.set_temperature
  #       data:
  #         entity_id: climate.main_floor_heat, climate.toy_room_heat, climate.kitchen_heat, climate.entryway_heat, climate.theater_room_heat
  #         temperature: 68
  #         operation_mode: Heat
  #     - service: climate.set_temperature
  #       data:
  #         entity_id: climate.guest_bedroom_heat, climate.master_bedroom_heat, climate.kids_bedroom_heat
  #         temperature: 70
  #         operation_mode: Heat


########## IR Remotes #############
  - alias: Projector Receiver Toggle
    trigger:
      - platform: state
        entity_id: input_boolean.receiver

    action:
      - service: switch.broadlink_send_packet_192_168_1_66
        data:
          packet: "JgCoAQABJZQRFBE4ERQRFBE4ERQRORE4ExIRFBE4ETkRFBE4ETkRFBA5ETkRExE5ERQRExE5ETkRExEUETkRExE5ETgRFBEUEQAFHAABJE0RAAxJAAEmSxIADEgAASZLEgAMSAABJksSAAxIAAEnShMADEcAASdKEwAMRwABJ0oTAAxHAAEnShMADEcAASdKEwAMRwABJ0oTAAxHAAEnShMADEcAASdKEwAMRwABJ0oTAAxHAAEnShMADEcAASdKEwAMRwABJ0oTAAxHAAElTBEADEkAASVMEQAMSgABJkoTAAxHAAElTBEADEkAASdIFQAMSAABJEwRAAxKAAEmShMADEgAASZKEwAMSAABJkoTAAxIAAEmShMADEgAASZKEwAMSAABJkoTAAxIAAEmShMADEgAASZKEwAMSAABJkoTAAxIAAEmShMADEgAASVLEgAMSQABJkoTAAxIAAEmShMADEgAASZKEwAMSAABJkoUAAxHAAEmShQADEcAASZKFAAMRwABJkoUAAxHAAEmShQADEcAASZKFAAMRwABJkoUAAxHAAEmShQADQU="  

  - alias: Select Desk LEDs Blue
    trigger: 
      - platform: state
        entity_id: input_select.desk_leds
        to: "Blue"
    action:
      - service: switch.broadlink_send_packet_192_168_1_62
        data:
          packet: "JgC4AQABKZQSExMSFBIRFRESFBMRFBISEzcTNxI3FDcTNxI3FDcTNxI4EzcTEhM3EzcSFBISExMRFBISEzcTEhMTETgTNxM3EgAFHQABKUsTAAxUAAEpSxIADFAAASlLEwAMVAABKUsSAAxUAAEqShMADFUAASlLEgAMVQABKUsTAAxUAAEqShMADFQAASpKEwAMVQABKUoTAAxVAAEpShMADFUAASlKEwAMVQABKEsTAAxUAAEpSxIADFUAASlLEgAMVQABKUsTAAxUAAEqShMADFQAASlLEwAMVAABKUsTAAxUAAEpSxMADFQAASpKEwAMVAABKkoTAAxUAAEqShMADFQAASpKEwAMVAABKUsTAAxUAAEpSxMADFQAASlLEwAMVAABKkoTAAxUAAEpSxMADFQAASlLEwAMVAABKUsTAAxUAAEpSxIADFUAASlKEwAMVAABKUsTAAxUAAEpShMADFQAASpKEwAMVAABKkoTAAxUAAEqShMADFQAASpKEwAMVAABKkoTAAxUAAEqShMADFQAASpKEwAMVAABKkoTAAxUAAEqShMADFQAASlLEwAMRQABKksTAA0F"
  - alias: Select Desk LEDs Maize
    trigger: 
      - platform: state
        entity_id: input_select.desk_leds
        to: "Maize"
    action:
      - service: switch.broadlink_send_packet_192_168_1_62
        data:
          packet: "JgCYAQABJ5YRFRETEhMRFRETEhQQFREUEjgRORA5EzgRORA6EjgRORAVERQSOBI4EDoRFBAVEhMSOBI4EBUSExITEDoSOBI4EQAFIAABKEwSAAxWAAEpShEADFcAASdMEQAMVgABJ00SAAxVAAEoSxMADFQAAShLEwAMVAABKUoTAAxUAAEpShMADFQAASlKEwAMVAABKEsTAAxUAAEoSxMADFQAASlKEwAMVAABKUoTAAxUAAEpShMADFQAASlKEwAMVAABKEsTAAxUAAEoSxIADFUAAShLEwAMUwABKUsSAAxUAAEpSxIADFQAASlKEwAMVAABKUoTAAxUAAEpShMADFQAAShLEwAMUwABKUsSAAxUAAEpShMADFQAAShLEwAMUwABKUoTAAxUAAEmTRIADFQAASdMEwAMUwABJ00QAAxWAAEnTBEADFYAASZNEAAMVgABKUoRAAxWAAEpShAADFYAASdNEAAMVgABJ0wRAAxWAAEnTBAADFYAASdMEQAMVgABJ0wQAAxWAAEnTBEADFYAASdMEQANBQ=="
  - alias: Select Desk LEDs Green 
    trigger: 
      - platform: state
        entity_id: input_select.desk_leds
        to: "Green"
    action:
      - service: switch.broadlink_send_packet_192_168_1_62
        data:
          packet: "JgAgAQABKpUSExITERUQFBMTEBURFBITETkSORE4ETkTOBE5EDkTOBI4EBUSExITETkSExEVERMSFBA6EjgRORAVETkQOhI4EgAFIAABKUsSAAxTAAEqShIADFYAASlLEgAMVQABKkoSAAxWAAEpSxIADFYAASlKEwAMVQABKkoSAAxVAAEqShMADFEAASlLEgAMVgABKUsSAAxWAAEpSxIADFYAASpKEgAMVgABKkoSAAxWAAEpSxIADFUAASlLEwAMVQABK0kTAAxVAAEqShMADFQAAStJFAAMVAABK0kUAAxUAAErSRQADFQAAStJFAAMVAABK0kUAAxUAAErSRQADFQAASpKEwAMVAABKUsUAAxUAAEqShMADFIAAStKEwANBQAAAAAAAAAA"
  - alias: Select Desk LEDs Red
    trigger: 
      - platform: state
        entity_id: input_select.desk_leds
        to: "Red"
    action:
      - service: switch.broadlink_send_packet_192_168_1_62
        data:
          packet: ""
  - alias: Select Desk LEDs Smooth
    trigger: 
      - platform: state
        entity_id: input_select.desk_leds
        to: "Smooth"
    action:
      - service: switch.broadlink_send_packet_192_168_1_62
        data:
          packet: "JgCYAQABJpYSExITEBURFBEUEBURFBITEDoRORE5EDkTOBE5EDkROhAUEhMRORI5ERMSExEVEBQSORA5EBYQFBI4EjgQOhE5EQAFIAABJ0sSAAxWAAEnSxIADFcAASZMEQAMVQABKEsSAAxWAAEnTBEADFcAASdMEQAMVwABJ0wRAAxXAAEoShIADFYAASlKEgAMVgABKEsSAAxWAAEoSxEADFYAASlKEgAMVgABKUoSAAxWAAEpShIADFYAASlKEgAMVgABKEsRAAxXAAEoSxEADFcAAShKEgAMVgABKUoSAAxWAAEnTBEADFYAAShLEgAMVgABJ0sRAAxXAAEnSxIADFYAASdMEQAMVwABJ0sSAAxWAAEoSxIADFYAASdLEgAMVgABJ0wRAAxWAAEoSxEADFYAAShLEgAMVgABJ0sSAAxWAAEnTBEADFYAASdMEQAMVwABJ0sSAAxWAAEoShMADFUAASdMEgAMVQABKEsSAAxVAAEoSxIADFYAASdLEgAMVgABJ0sSAAxWAAEnSxIADFYAASZMEgANBQ=="
          
  - alias: Select Projector Input Roku
    trigger:
      - platform: state
        entity_id: input_select.projector_input
        to: "Roku"
    action:
      - service: switch.broadlink_send_packet_192_168_1_66
        data:
          packet: "JgAoAgABJpQTEhM2ExITEhM2FBETNhM3FDYTERQ2FDUUERQ2FDUUERM3EzYUNhM2FBETEhMRExITEhMSExETEhM3EzYTNxM2EwAE9gABJkoUAAxHAAEkTBEADEoAASRMEQAMSgABJkoTAAxIAAEkTREADEkAASRNEQAMSQABJE0SAAxIAAEmSxIADEkAASVLEgAMSQABJUsSAAxJAAElSxIADEkAASVLEgAMSQABJE0RAAxJAAEkTREADEkAASRNEQAMSQABJE0RAAxJAAElTBEADEoAASRMEQAMSgABJEwRAAxKAAEkTBEADEoAASRMEQAMSgABJE0RAAxJAAEkTREADEkAASRNEQAMSQABJUwRAAxKAAEkTBEADEoAASRMEQAMSgABJEwRAAxKAAEkTBEADEoAASRNEQAMSQABJE0RAAxJAAEmSxEADEkAASZLEwAMRwABJksTAAxIAAEmShMADEgAASZKEwAMSAABJkoTAAxIAAEmSxIADEgAASZLEgAMSAABJksTAAxHAAEmSxMADEcAASZLEwAMSAABJkoTAAxIAAEmShMADEgAASdJEwAMSAABJ0kTAAxIAAEnShMADEcAASdKEwAMRwABJ0oUAAxGAAEnShQADEcAASZKEwAMSAABJkoTAAxIAAEmShMADEgAASZKEwAMSAABJE0TAAxHAAEkTREADEkAASVMEQAMSgABJEwRAAxKAAEkTBEADEoAASRMEQANBQ=="  

  - alias: Select Projector Input Cable
    trigger:
      - platform: state
        entity_id: input_select.projector_input
        to: "Cable"
    action:
      - service: switch.broadlink_send_packet_192_168_1_66
        data:
          packet: "JgDgAQABJpMTEhM3EhITEhM3EhITNxM2EzcTEhM2EzcTEhI3EzcSEhMSEzcTNhM3ExISEhMSExITNhMSExITEhI3EzcTNhM3EwAE9QABJksTAAxHAAEmSxMADEgAASVLEwAMSAABJUsTAAxIAAEmShMADEgAASdJFAAMRwABJkoTAAxIAAEmShMADEgAASZLEwAMRwABJksRAAxJAAEkTREADEkAASRNEQAMSQABJUwRAAxKAAEkTBEADEoAASRMEQAMSgABJEwRAAxKAAEkTBEADEoAASRMEQAMSgABJE0RAAxJAAEkTREADEkAASRNEQAMSQABJUwRAAxKAAEkTBEADEoAASRMEQAMSgABJEwRAAxKAAEkTBEADEoAASRMEQAMSgABJEwSAAxJAAEkTREADEkAASRNEQAMSQABJUwRAAxJAAElTBEADEoAASRMEQAMSgABJEwRAAxKAAEkTBEADEoAASRMEQAMSgABJEwRAAxKAAEkTREADEkAASRNEQAMSQABJE0RAAxJAAElTBEADEkAASVMEQAMSgABJEwRAAxKAAEkTBEADEoAASRMEQAMSgABJEwRAAxKAAEkTBIADEkAASRNEQAMSQABJE0RAAxJAAEkTREADEkAASZLEQANBQAAAAAAAAAA"  

  - alias: Select Projector Input DVD
    trigger:
      - platform: state
        entity_id: input_select.projector_input
        to: "DVD"
    action:
      - service: switch.broadlink_send_packet_192_168_1_66
        data:
          packet: "JgDYAgABJJYRExI4ERQRExI4ERQROBE5ETgSExE5ETgRFBE5ETgRFBE5ERMRORE4ERQRFBEUERMRFBE5ERMSExE5ETgRORE4EgAE9wABJE0RAAxJAAEkTREADEkAASRNEQAMSgABJEwRAAxKAAEkTBEADEoAASRMEQAMSgABJEwRAAxKAAEkTBIADEkAASRNEQAMSQABJE0RAAxJAAEkTREADEkAASRNEQAMSQABJUwRAAxJAAElTBEADEoAASRMEQAMSgABJEwRAAxKAAEkTBEADEoAASRNEQAMSQABJE0RAAxJAAEkTREADEkAASVMFAAMRwABJEwRAAxKAAEkTBEADEoAASRMEQAMSgABJE0RAAxJAAEkTREADEkAASRNEQAMSQABJUwRAAxKAAEkTBEADEoAASRMEQAMSgABJEwRAAxKAAEkTBEADEoAASRMEQAMSgABJEwRAAxKAAEkTBEADEoAASRMEQAMSgABJEwRAAxKAAEkTBEADEoAASRNEQAMSQABJE0RAAxJAAElTBEADEoAASRMEQAMSgABJEwRAAxKAAEkTBEADEoAASRMEgAMSQABJE0RAAxJAAEkTREADEkAASVMEQAMSgABJEwRAAxKAAEkTBEADEoAASRMEgAMSQABJE0RAAxJAAEkTREADEoAASRMEQAMSgABJEwRAAxKAAEkTBEADEoAASRMEgAMSQABJE0RAAxJAAElTBEADEoAASRMEQAMSgABJEwRAAxKAAEkTBEADEoAASRNEQAMSQABJE0RAAxJAAElTBEADEkAASVMEQAMSgABJEwRAAxKAAEkTBEADEoAASRNEQAMSQABJE0RAAxJAAElTBEADEoAASRMEQAMSgABJEwRAAxKAAEkTBIADEkAASRNEQAMSQABJUwRAAxKAAEkTBEADEoAASRMEQAMSgABJEwRAAxKAAEkTREADEkAASRNEQAMSQABJUwRAA0F"  

  - alias: Select Projector Input extra
    trigger:
      - platform: state
        entity_id: input_select.projector_input
        to: "extra"
    action:
      - service: switch.broadlink_send_packet_192_168_1_66
        data:
          packet: "JgCYAgABJpMTEhM2FBETEhM2FBETNxM2ExITEhM2EzcTEhM2EzcTERQRExITNhQ2ExITEhMREzcTNhQ2ExITERQ2EzYUNhMSEwAFGgABJkoUAAxHAAEmShQADEcAASZKEwAMSAABJkoTAAxIAAEmShMADEcAASdKEwAMRwABJ0oTAAxHAAEnShMADEcAASdKEwAMRwABJksTAAxHAAEmShQADEcAASZKFAAMRwABJkoUAAxHAAEmShMADEgAASZKEwAMSAABJkoTAAxIAAEmShMADEgAASZKEwAMRwABJ0oTAAxHAAEnShMADEcAASdKEwAMRwABJ0oTAAxHAAEmSxMADEcAASZLEwAMRwABJkoUAAxHAAEmShMADEgAASZKEwAMSAABJkoTAAxIAAEmShMADEcAASdKEwAMRwABJ0oTAAxHAAEnShMADEcAASZLEwAMRwABJkoUAAxHAAEmShQADEcAASZKEwAMSAABJkoTAAxIAAEmShMADEcAASdKEwAMRwABJ0oTAAxHAAEnShMADEcAASZLEwAMRwABJkoUAAxHAAEmShQADEcAASZKEwAMSAABJkoTAAxIAAEmShMADEcAASdKEwAMRwABJ0oTAAxHAAEmShQADEcAASZKFAAMRwABJkoUAAxHAAEmShMADEgAASZKEwAMRwABJ0oTAAxHAAEnShMADEcAASZLEwAMRwABJkoUAAxHAAEmShMADEgAASZKEwAMSAABJkoTAAxIAAEmShMADEcAASdKEwAMRwABJksTAAxHAAEmSxIADEgAASVLEwAMSAABJEwRAAxKAAEkTBEADEkAASVMEQAMSQABJE0RAAxJAAEkTREADEkAASRMEQAMSgABJUsSAAxJAAElSxIADQU="  

########## ALARM ###########
  - alias: Trigger alarm while armed home or away
    trigger:
      - platform: state
        entity_id: binary_sensor.shop_door
        to: 'on'    
      - platform: state
        entity_id: binary_sensor.garage_motion
        to: 'on'
      - platform: state
        entity_id: binary_sensor.basement_door
        to: 'on'
      - platform: state
        entity_id: binary_sensor.garage_entry
        to: 'on'
      - platform: state
        entity_id: binary_sensor.front_door
        to: 'on'
      - platform: state
        entity_id: binary_sensor.kitchen_door
        to: 'on'
      - platform: state
        entity_id: binary_sensor.kitchen_windows
        to: 'on'
      - platform: state
        entity_id: binary_sensor.front_windows
        to: 'on'
      - platform: state
        entity_id: binary_sensor.master_bedroom
        to: 'on'
      - platform: state
        entity_id: binary_sensor.theater_windows
        to: 'on'      
      - platform: state
        entity_id: binary_sensor.hafens_room
        to: 'on'
      - platform: state
        entity_id: binary_sensor.grandmas_room
        to: 'on'
      - platform: state
        entity_id: binary_sensor.gym_window
        to: 'on'
    condition:
      condition: or
      conditions: 
      - condition: state
        entity_id: alarm_control_panel.alarm
        state: armed_away
      - condition: state
        entity_id: alarm_control_panel.alarm
        state: armed_home
    action:
      service: alarm_control_panel.alarm_trigger
      entity_id: alarm_control_panel.alarm

  - alias: Alarm Triggered
    trigger:
      - platform: state
        entity_id: alarm_control_panel.alarm
        to: 'triggered'
    action:
      - service: notify.notify
        data:
          message: "!Alarm Triggered!"
      - service: media_player.alexa_tts
        data:
          entity_id: media_player.theater_room_dot, media_player.kitchen_dot, media_player.amazon_office, media_player.mom_and_dads_room
          message: "The Alarm has been triggered. Input the disarm code or an automated message will be sent to the police in 30 seconds."
      - service: media_player.select_source
        data:
          entity_id: media_player.volumio_volumioboxlocal
          source: Sneak Caught 
      - service: media_player.select_source
        data:
          entity_id: media_player.volumio_volumiohomelocal
          source: Home Alarm
      - service: input_select.select_option
        data:
          entity_id: input_select.all_leds
          option: Police All        
      - service: notify.ios_justin_iphone7
        data:
          title: ALARM TRIGGERED
          message: "Maybe check the cameras"
      - service: notify.ios_janis7
        data:
          title: ALARM TRIGGERED
          message: "Scream! Run! Hide!"

####### HomeKit ######
  - alias: Homekit Delayed Start
    hide_entity: true    
    trigger:
      - platform: homeassistant
        event: start
    action:
      - delay: 00:05 
      - service: homekit.start

########### Audible Notifications #########
  - alias: 'Back Door Open'
    hide_entity: true
    trigger:
    - platform: state
      entity_id: binary_sensor.kitchen_door
      from: 'off'
      to: 'on'
      for: '00:02:00'
    action:
    - service: media_player.alexa_tts
      data:
        entity_id: media_player.kitchen_dot
        message: "Can someone please close the backdoor?"
    - service: media_player.alexa_tts
      data:
        entity_id: media_player.kitchen_dot
        message: "Can someone please close the backdoor?"

  - alias: 'Garage Fridge Open'
    hide_entity: true
    trigger:
    - platform: state
      entity_id: binary_sensor.garage_fridge
      from: 'off'
      to: 'on'
      for: '00:02:00'
    action:
    - service: media_player.alexa_tts
      data:
        entity_id: media_player.kitchen_dot
        message: "Can someone please close the garage fridge?"
    - service: tts.google_say
      data:
        entity_id: media_player.adenaudiocast
        message: "Can someone please close the garage fridge?"
  
  - alias: 'Basement Water Leak'
    hide_entity: true
    trigger:
    - platform: state
      entity_id: binary_sensor.basment_water
      from: 'off'
      to: 'on'
    action:
    - service: tts.google_say
      data:
        entity_id: media_player.adenaudiocast
        message: "Holy Crap there's water in the Basement again! Call someone, do something, ahhhhhhhh?"
    - service: media_player.alexa_tts
      data:
        entity_id: media_player.dads_office
        message: "Holy Crap there's water in the Basement again! Call someone, do something, ahhhhhhhh?"
    - service: notify.ios_justin_iphone7
      data:
        title: WATER LEAK
        message: "Holy Crap there's water in the Basement again! Call someone, do something, ahhhhhhhh?"
    - service: input_select.select_option
      data:
        entity_id: input_select.all_leds
        option: Police All

########## X-box Warnings ###########
  - alias: DrZzs Xbox 2hr warning
    hide_entity: true
    initial_state: 'on'
    trigger:
    - platform: state
      entity_id: sensor.drzzs_xbox
      to: 'on'
      for:
        minutes: 120
    action:
    - service: notify.drzzs_xbox
      data:
        message: "You've been playing for 2 hours bud. Time to take a break."

  - alias: Zach Xbox 3hr text
    hide_entity: true
    initial_state: 'on'
    trigger:
    - platform: state
      entity_id: sensor.i_am_zerp
      to: 'on'
      for:
        minutes: 180
    action:
      service: notify.ios_justin_iphone7
      data:
        title: "Zach Xbox" #customizable
        message: "Zach's been on the Xbox for 3 hours" #customizable 

######## Garage #########
  - alias: Reset garagePIR state
    hide_entity: true
    initial_state: 'on'
    trigger:
    - platform: state
      entity_id: binary_sensor.garage_motion
      from: 'off'
      to: 'on'
      for:
        seconds: 5
    action:
    - service: mqtt.publish
      data:
        topic: tele/RF_Bridge/RESULT
        payload: D54C1Eoff

  - alias: Garage Lights Off
    hide_entity: true
    initial_state: 'on'
    trigger:
    - platform: state
      entity_id: binary_sensor.garage_motion
      from: 'on'
      to: 'off'
      for:
        minutes: 5
    action:
    - service: switch.turn_off
      data:
        entity_id: switch.88800443bcddc2e42e95

  - alias: Garage Lights On
    hide_entity: true
    initial_state: 'on'
    trigger:
    - platform: state
      entity_id: binary_sensor.shop_door
      to: 'on'
    - platform: state
      entity_id: binary_sensor.garage_entry
      to: 'on'
    - platform: state
      entity_id: binary_sensor.garage_motion
      to: 'on'
    condition:
    - condition: state
      entity_id: switch.88800443bcddc2e42e95
      state: 'off'
    action:
      service: switch.turn_on
      data:
        entity_id: switch.88800443bcddc2e42e95

  - action:
    - alias: janis garage notice
      data:
        message: It's 10pm. I'm closing Janis' garage door
        title: Garage Door
      service: notify.ios_justin_iphone7
    - alias: close her door
      data:
        payload: OPEN
        topic: sensor/garage/actionjanis
      service: mqtt.publish
    alias: Check on Janis garage door
    hide_entity: true
    condition:
    - condition: state
      entity_id: cover.double
      state: open
    id: '1504414132239'
    trigger:
    - at: '22:00:00'
      platform: time
  - action:
    - data:
        entity_id: cover.double
      service: cover.open_cover
    alias: CarPresenceJanis_on
    hide_entity: true
    condition:
    - condition: state
      entity_id: cover.double
      state: closed
    id: '1519173799770'
    trigger:
    - entity_id: binary_sensor.carpresencejanis
      from: 'off'
      platform: state
      to: 'on'
  - action:
    - data:
        entity_id: cover.double
      service: cover.close_cover
    alias: CarPresenceJanis_off
    hide_entity: true
    condition:
    - condition: state
      entity_id: cover.double
      state: open
    id: '1519174129370'
    trigger:
    - entity_id: binary_sensor.carpresencejanis
      from: 'on'
      platform: state
      to: 'off'
  - action:
    - data:
        entity_id: cover.test
      service: cover.open_cover
    alias: CarPresenceJustin_on
    hide_entity: true
    condition:
    - condition: state
      entity_id: cover.test
      state: closed
    id: '1519177386792'
    trigger:
    - entity_id: binary_sensor.carpresencejustin
      from: 'off'
      platform: state
      to: 'on'
  - action:
    - data:
        entity_id: cover.test
      service: cover.close_cover
    alias: CarPresenceJustin_off
    hide_entity: true
    condition:
    - condition: state
      entity_id: cover.test
      state: open
    id: '1519177468452'
    trigger:
    - entity_id: binary_sensor.carpresencejustin
      from: 'on'
      platform: state
      to: 'off'
  # - alias: Reset officeWand state
  #   hide_entity: true
  #   initial_state: 'on'
  #   trigger:
  #   - platform: state
  #     entity_id: binary_sensor.office_wand
  #     from: 'off'
  #     to: 'on'
  #     for:
  #       seconds: 5
  #   action:
  #   - service: mqtt.publish
  #     data:
  #       topic: tele/RF_Bridge/RESULT
  #       payload: D31421off

  # - alias: Reset officeBook state
  #   hide_entity: true
  #   initial_state: 'on'
  #   trigger:
  #   - platform: state
  #     entity_id: binary_sensor.office_book
  #     from: 'off'
  #     to: 'on'
  #     for:
  #       seconds: 5
  #   action:
  #   - service: mqtt.publish
  #     data:
  #       topic: tele/RF_Bridge/RESULT
  #       payload: C7C2A19off

  # - alias: Office Lock Magic
  #   hide_entity: true
  #   initial_state: 'on'
  #   trigger:
  #   - platform: state
  #     entity_id: binary_sensor.office_book
  #     to: 'on'
  #   - platform: state
  #     entity_id: binary_sensor.office_wand
  #     to: 'on'
  #   action:
  #   - service: switch.toggle
  #     data:
  #       entity_id: switch.office_lock
  #   - service: tts.google_say
  #     data:
  #       entity_id: media_player.adenaudiocast
  #       message: "You have chosen wisely. You may enter my realm"

  # - alias: Poorly
  #   hide_entity: True
  #   trigger:
  #   - platform: state
  #     entity_id: binary_sensor.office_wand
  #     from: 'off'
  #     to: 'on'
  #   action:
  #   - service: media_player.select_source
  #     data:
  #       entity_id: media_player.volumio_volumioboxlocal
  #       source: Poorly

  - alias: DrZzs leaving Work
    trigger:
      - platform: state
        entity_id: device_tracker.justin_iphone7
        from: 'Work'
        to: 'not_home'
    action:
      - service: notify.notify
        data:
          message: Daddy just left work, should be home soon
      - service: media_player.select_source
        data:
          entity_id: media_player.volumio_volumiohomelocal
          source: DaddyisComingHome
      - delay: 00:30:00
      - service: input_select.select_option
        data:
          entity_id: input_select.all_leds
          option: Touchdown      
      - delay: 00:15:00
      - service: input_select.select_option
        data:
          entity_id: input_select.all_leds
          option: solid
      - delay: 00:00:10
      - service: lights.turn_off
        entity_id: lights.holiday_lights, lights.side_lights, lights.tree_lights, lights.office_test_lights
      
  # - alias: DrZzs leaving to Janis
  #   action:  
  #     data:
  #       message: Dr Zzs just left work
  #     service: notify.ios_janis_iphone
  #   alias: Leaving Work notify Janis
  #   condition: []
  #   id: '1504118215103'
  #   trigger:
  #   - entity_id: device_tracker.justin_iphone7
  #     from: Work
  #     platform: state
  #     to: not_home
  # - action:
  #   alias: my garage notice
  #     data:
  #       message: It's 10pm. I'm closing your garage door
  #       title: Garage Door
  #     service: notify.justin_iphone7
  #   - alias: close the door
  #     data:
  #       payload: 'ON'
  #       topic: cmnd/sonoffSV04/POWER
  #     service: mqtt.publish
  #   - alias: Check on Justin garage door
  #   condition:
  #   - condition: state
  #     entity_id: cover.test
  #     state: open
  #   id: '1504215020828'
  #   trigger:
  #   - at: '22:30:00'
  #     platform: time

  - action:
    - alias: Halloween Scheduled Lights
      data:
        payload: Halloween
        topic: bruh/mqttstrip/seteffect
      service: mqtt.publish
    alias: Halloween Lights
    hide_entity: true
    condition: []
    id: '1504484128174'
    trigger:
    - platform: template
      value_template: '"{% if is_state(''sensor.date__time'', ''2017-10-31, 18:00'')
        %}true{% endif %}"'

  # - action:
  #   - alias: Lights off
  #     data:
  #       entity_id: light.holiday_lights
  #     service: light.turn_off
  #     data:
  #       entity_id: light.tree_lights
  #     service: light.turn_off
  #   - data:
  #       entity_id: light.side_lights
  #     service: light.turn_off
  #   alias: Turn off Holiday lights at 10pm
  #   hide_entity: true
  #   condition: []
  #   id: '1506099449511'
  #   trigger:
  #   - at: '22:00:00'
  #     platform: time

  - action:
    - alias: garage blink
      data:
        friendly_name: Garage
      service: blink.snap_picture
    alias: Garage Blink Pic
    hide_entity: true
    condition: []
    id: '1509405186382'
    trigger:
    - entity_id: input_boolean.garage_blink
      from: 'on'
      platform: state
      to: 'off'
    - entity_id: input_boolean.garage_blink
      from: 'off'
      platform: state
      to: 'on'
  
  - action:
    - data:
        entity_id: switch.office_light
      service: switch.turn_on
    - data:
        entity_id: switch.office_fan
      service: switch.turn_on
    - data:
        entity_id: switch.office_crown
      service: switch.turn_on
    - data:
        entity_id: media_player.spotify
        source: Dad's Office
      service: media_player.select_source
    - data:
        entity_id: media_player.spotify
      service: media_player.media_play
    - alias: ''
      data:
        entity_id: input_boolean.office_on
      service: input_boolean.turn_off
    - data:
        payload: Touchdown
        topic: bruh/mqttstripTEST/seteffect
      service: mqtt.publish
    - delay: 00:03:00
    - data:
        entity_id: light.office_test_lights
      service: light.turn_off
    alias: Office Home
    hide_entity: true
    condition: []
    id: '1514337924171'
    trigger:
    - entity_id: input_boolean.office_on
      from: 'off'
      platform: state
      to: 'on'
  - action:
    - data:
        entity_id: switch.office_crown
      service: switch.turn_off
    - data:
        entity_id: switch.office_fan
      service: switch.turn_off
    - data:
        entity_id: switch.office_light
      service: switch.turn_off
    - data:
        entity_id: media_player.spotify
      service: media_player.media_pause
    - data:
        entity_id: input_boolean.office_off
      service: input_boolean.turn_off
    alias: Going to Bed Office
    hide_entity: true
    condition: []
    id: '1514340361137'
    trigger:
    - entity_id: input_boolean.office_off
      from: 'off'
      platform: state
      to: 'on'

############### Hall 3-way Switches ##############
  - action:
    - data:
        entity_id: switch.upstairs_hall
      service: switch.toggle
    alias: Multi Switch Hall Lights
    hide_entity: true
    condition: []
    id: '1514764929766'
    trigger:
    - entity_id: switch.sonoff_11
      from: 'on'
      platform: state
      to: 'off'
    - entity_id: switch.sonoff_11
      from: 'off'
      platform: state
      to: 'on'
    - entity_id: switch.sonoff_12
      from: 'on'
      platform: state
      to: 'off'
    - entity_id: switch.sonoff_12
      from: 'off'
      platform: state
      to: 'on'
  - action:
    - delay: 00:30:00
    - data:
        entity_id: switch.back_porch
      service: switch.turn_off
    alias: side porch timer
    hide_entity: true
    condition: []
    id: '1515120730104'
    trigger:
    - entity_id: switch.back_porch
      from: 'off'
      platform: state
      to: 'on'

  # - action:
  #   - delay: 00:00:01
  #   - data:
  #       payload: 'OFF'
  #       topic: cmnd/sonoffSV04/POWER
  #     service: mqtt.publish
  #   alias: MQTT SV test
  #   hide_entity: true
  #   condition: []
  #   id: '1515737754284'
  #   trigger:
  #   - payload: 'ON'
  #     platform: mqtt
  #     topic: cmnd/sonoffSV04/POWER

  - action:
    - data:
        entity_id: switch.back_porch
      service: switch.turn_off
    alias: light timer
    hide_entity: true
    condition:
    - condition: state
      entity_id: switch.back_porch
      state: 'on'
    id: '1519190216462'
    trigger:
    - at: '22:00:00'
      platform: time

  - action:
    - data:
        entity_id: input_select.all_leds
        option: Touchdown
      service: input_select.select_option
    - delay: 00:15:00
    - data:
        entity_id: input_select.all_leds
        option: solid
      service: input_select.select_option
    - data:
        entity_id: light.office_test_lights
      service: light.turn_off
    - data:
        entity_id: light.holiday_lights
      service: light.turn_off
    - data:
        entity_id: light.side_lights
      service: light.turn_off
    alias: Time for Bed lights
    hide_entity: true
    condition: []
    id: '1525920958362'
    trigger:
    - event: sunset
      platform: sun

#############  Holiday LEDs ################
  - alias: "All Holiday LEDs"
    hide_entity: true
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_select.all_LEDs
    action: 
      - service: mqtt.publish
        data_template:
          topic: "bruh/mqttstrip/seteffect"
          payload: '{{ trigger.to_state.state | string }}'
      - service: mqtt.publish
        data_template:
          topic: "bruh/mqttstripSide/seteffect"
          payload: '{{ trigger.to_state.state | string }}'
      - service: mqtt.publish
        data_template:
          topic: "bruh/mqttstripTEST/seteffect"
          payload: '{{ trigger.to_state.state | string }}'
      - service: mqtt.publish
        data_template:
          topic: "bruh/mqttstripTree/seteffect"
          payload: '{{ trigger.to_state.state | string }}'

  - alias: "Holiday Input Effect"
    initial_state: True
    hide_entity: True
    trigger:
      - platform: state
        entity_id: input_select.holiday_led_effect
    action:
      - service: mqtt.publish
        data_template:
          topic: "bruh/mqttstrip/seteffect"
          payload: '{{ trigger.to_state.state | string }}'

  - alias: "Side Input Effect"
    initial_state: True
    hide_entity: True
    trigger:
      - platform: state
        entity_id: input_select.side_led_effect
    action:
      - service: mqtt.publish
        data_template:
          topic: "bruh/mqttstripSide/seteffect"
          payload: '{{ trigger.to_state.state | string }}'

  - alias: "Christmas LED Sunset Rotation"
    hide_entity: true
    initial_state: true
    trigger:
      - platform: sun
        event: Sunset
    condition:
      - condition: template
        value_template: '{{ now().month == 12 }}'
    action:
      - service: mqtt.publish
        data:
          topic: "bruh/mqttstrip/seteffect"
          payload: 'Holly Jolly'
      - service: mqtt.publish
        data:
          topic: "bruh/mqttstripSide/seteffect"
          payload: 'Holly Jolly'      
      - service: mqtt.publish
        data:
          topic: "bruh/mqttstripTree/seteffect"
          payload: 'Holly Jolly'
      - delay: 01:00:00
      - service: mqtt.publish
        data:
          topic: "bruh/mqttstrip/seteffect"
          payload: 'Candy Cane' 
      - service: mqtt.publish
        data:
          topic: "bruh/mqttstripSide/seteffect"
          payload: 'Candy Cane' 
      - service: mqtt.publish
        data:
          topic: "bruh/mqttstripTree/seteffect"
          payload: 'Hail'
      - delay: 01:00:00
      - service: mqtt.publish
        data:
          topic: "bruh/mqttstrip/seteffect"
          payload: 'Christmas'
      - service: mqtt.publish
        data:
          topic: "bruh/mqttstripSide/seteffect"
          payload: 'Christmas'
      - service: mqtt.publish
        data:
          topic: "bruh/mqttstripTree/seteffect"
          payload: 'Christmas'
      - delay: 01:00:00            
      - service: mqtt.publish
        data:
          topic: "bruh/mqttstrip/seteffect"
          payload: 'Holly Jolly' 
      - service: mqtt.publish
        data:
          topic: "bruh/mqttstripSide/seteffect"
          payload: 'Holly Jolly' 
      - service: mqtt.publish
        data:
          topic: "bruh/mqttstripTree/seteffect"
          payload: 'Holly Jolly' 

  - alias: "Animation Speed"
    initial_state: True
    hide_entity: True
    trigger:
      - platform: state
        entity_id: input_number.animation_speed
    action:
      - service: mqtt.publish
        data_template:
          topic: "bruh/mqttstrip/setanimationspeed"
          payload: '{{ trigger.to_state.state | int }}'

  - alias: "All Animation Speed"
    initial_state: True
    hide_entity: True
    trigger:
      - platform: state
        entity_id: input_number.all_animation_speed
    action:
      - service: mqtt.publish
        data_template:
          topic: "bruh/mqttstrip/setanimationspeed"
          payload: '{{ trigger.to_state.state | int }}'
      - service: mqtt.publish
        data_template:
          topic: "bruh/mqttstripTree/setanimationspeed"
          payload: '{{ trigger.to_state.state | int }}'
      - service: mqtt.publish
        data_template:
          topic: "bruh/mqttstripSide/setanimationspeed"
          payload: '{{ trigger.to_state.state | int }}'
      - service: mqtt.publish
        data_template:
          topic: "bruh/mqttstripTEST/setanimationspeed"
          payload: '{{ trigger.to_state.state | int }}'

  - alias: "Side Animation Speed"
    initial_state: True
    hide_entity: True
    trigger:
      - platform: state
        entity_id: input_number.side_animation_speed
    action:
      - service: mqtt.publish
        data_template:
          topic: "bruh/mqttstripSIDE/setanimationspeed"
          payload: '{{ trigger.to_state.state | int }}'

  - alias: "Office Test Input Effect"
    initial_state: True
    hide_entity: True
    trigger:
      - platform: state
        entity_id: input_select.office_test_led_effect
    action:
      - service: mqtt.publish
        data_template:
          topic: "bruh/mqttstripTEST/seteffect"
          payload: '{{ trigger.to_state.state | string }}'

  - alias: "Test Animation Speed"
    initial_state: True
    hide_entity: True
    trigger:
      - platform: state
        entity_id: input_number.test_animation_speed
    action:
      - service: mqtt.publish
        data_template:
          topic: "bruh/mqttstripTEST/setanimationspeed"
          payload: '{{ trigger.to_state.state | int }}'

  - alias: "Tree Input Effect"
    initial_state: True
    hide_entity: True
    trigger:
      - platform: state
        entity_id: input_select.tree_led_effect
    action:
      - service: mqtt.publish
        data_template:
          topic: "bruh/mqttstripTree/seteffect"
          payload: '{{ trigger.to_state.state | string }}'

  - alias: "Tree Animation Speed"
    initial_state: True
    hide_entity: True
    trigger:
      - platform: state
        entity_id: input_number.tree_animation_speed
    action:
      - service: mqtt.publish
        data_template:
          topic: "bruh/mqttstripTree/setanimationspeed"
          payload: '{{ trigger.to_state.state | int }}'

  - alias: "Box Input Effect"
    initial_state: True
    hide_entity: True
    trigger:
      - platform: state
        entity_id: input_select.box_led_effect
    action:
      - service: mqtt.publish
        data_template:
          topic: "bruh/mqttstripBox/seteffect"
          payload: '{{ trigger.to_state.state | string }}'

  - alias: "Box Animation Speed"
    initial_state: True
    hide_entity: True
    trigger:
      - platform: state
        entity_id: input_number.box_animation_speed
    action:
      - service: mqtt.publish
        data_template:
          topic: "bruh/mqttstripBox/setanimationspeed"
          payload: '{{ trigger.to_state.state | int }}'

############# iOS Notifications ##############
  - alias: "Justin Garage Notification iOS"
    hide_entity: True
    initial_state: True
    trigger:
      - platform: state
        entity_id: cover.single
        from: 'closed'
        to: 'open'
    action:
      - service: notify.ios_justin_iphone7
        data:
          message: "Justin's Garage is Open"
          data:
            push:
              sound: "US-EN-Morgan-Freeman-Garage-Door-Opened.wav"
              badge: 0
              category: 'GARAGE2'

  - alias: "Janis Garage Notification iOS"
    hide_entity: True
    initial_state: True
    trigger:
      - platform: state
        entity_id: cover.double
        from: 'closed'
        to: 'open'
    action:
      - service: notify.ios_janis7
        data:
          message: "Janis' Garage is Open"
          data:
            push:
             sound: "US-EN-Daisy-Garage-Door-Open.wav"
             badge: 0
             category: 'GARAGE1'

  - alias: Notify iOS app
    initial_state: True
    hide_entity: True
    trigger:
      - platform: state
        entity_id: input_boolean.test_trigger #change this to actual trigger
    action:
        service: notify.ios_justin_iphone7
        data:
          title: "Alert" #customizable
          message: "Something happened at home!" #customizable 
          data:
            push:
              badge: 0 # this will remove the badge/app icon number
              category: 'DOOR'

  - alias: Notify iOS Janis Garage
    initial_state: True
    hide_entity: True
    trigger:
      - platform: time
        at: '22:00:00' #change this to actual trigger
    condition:
      condition: state
      entity_id: cover.double
      state: open
    action:
        service: notify.ios_justin_iphone7
        data:
          title: "Janis' Garage Check" #customizable
          message: "It's 10pm and Janis' Garage is Open" #customizable 
          data:
            push:
              badge: 0 # this will remove the badge/app icon number
              category: 'GARAGE1'

  - alias: Notify iOS Justin Garage
    initial_state: True
    hide_entity: True
    trigger:
      - platform: time
        at: '22:00:00' #change this to actual trigger
    # trigger:
    #   - platform: state
    #     entity_id: input_boolean.garagetest
    condition:
      condition: state
      entity_id: cover.test
      state: open
    action:
        service: notify.ios_justin_iphone7
        data:
          title: "Justin Garage Check" #customizable
          message: "It's 10pm and Justin's Garage is Open" #customizable 
          data:
            push:
              badge: 0 # this will remove the badge/app icon number
              category: 'GARAGE2'
  
  - alias: iOS app notification action garage1
    initial_state: True
    hide_entity: True  
    trigger:
      platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: CLOSE_JANIS
    action:
      service: cover.close_cover
      entity_id: cover.double

  - alias: iOS app notification action garage2
    initial_state: True
    hide_entity: True  
    trigger:
      platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: CLOSE_JUSTIN
    action:
      service: cover.close_cover
      entity_id: cover.test

  - alias: iOS app notification action pressed1
    initial_state: true
    hide_entity: true  
    trigger:
      platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: OPEN_FIRST
    action:
      service: input_boolean.turn_on
      entity_id: input_boolean.result
   
  - alias: iOS app notification action pressed2
    hide_entity: true
    initial_state: true
    trigger:
      platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: OPEN_SECOND
    action:
      service: cover.close_cover
      entity_id: cover.double

  - alias: iOS app notification action pressed3
    hide_entity: true
    initial_state: true
    trigger:
      platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: OPEN_THIRD
    action:
      service: cover.close_cover
      entity_id: cover.test
  
  - alias: iOS app AN Game WIN
    initial_state: true
    hide_entity: true
    trigger:
      platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: WIN
    action:
      service: input_select.select_option
      data:
        entity_id: input_select.holiday_led_effect
        option: Touchdown

  - alias: iOS app AN Game LOSS
    initial_state: true
    hide_entity: true
    trigger:
      platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: LOSS
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.holiday_led_effect
          option: Solid
      - service: light.turn_off
        entity_id: light.holiday_lights

########### HASS Themes ############ old
  # - alias: HASS_theme
  #   initial_state: true
  #   hide_entity: true
  #   trigger:
  #     - platform: state
  #       entity_id: input_select.hass_theme
  #   action:
  #     - service: frontend.set_theme
  #       data_template:
  #         name: '{{ states.input_select.hass_theme.state }}'
  # - alias: 'Set Spotify Volume'
  #   hide_entity: true
  #   trigger:
  #     - platform: state
  #       entity_id: input_number.spotify_volume
  #   action:
  #     - service: media_player.volume_set
  #       data_template:
  #         entity_id: media_player.spotify
  #         volume_level: '{{  states.input_number.spotify_volume.state  }}'

# car sensor is connected and the garage door is closed
#   - alias: CarPresenceJanis_ON
#     trigger:
#       platform: state
#       entity_id: binary_sensor.CarPresenceJanis
#       to: on
#     condition:
#     - condition: state
#       entity_id: cover.double
#       state: closed
#     action:
#     - service: cover.open_cover
#       entity_id: cover.double

# # car sensor is disconnected for one minute and the garage door is open
#   - alias: CarPresenceJanis_OFF
#     trigger:
#       platform: state
#       entity_id: binary_sensor.CarPresenceJanis
#       to: off
#       for:
#         minutes: 1
#     condition:
#     - condition: state
#       entity_id: cover.double
#       state: open
#     action:
#     - service: cover.close_cover
#       entity_id: cover.double
  

###############